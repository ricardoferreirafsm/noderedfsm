[
    {
        "id": "7c71e4ade78eb0e9",
        "type": "tab",
        "label": "Mapa de Excedentes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f12c30ed7e28c309",
        "type": "tab",
        "label": "Vendas FSM",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ec03563f9c5b861e",
        "type": "tab",
        "label": "Vendas Boinvest",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2cc8840c3c65c436",
        "type": "tab",
        "label": "Plano De Entregas",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4825264caacc700a",
        "type": "tab",
        "label": "Mapa De Amostra",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d8b91f5aab19e75d",
        "type": "tab",
        "label": "Encomendas FSM",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4185b36a93d9e0ac",
        "type": "tab",
        "label": "Encomendas Atrasadas",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d933443e78580c5",
        "type": "tab",
        "label": "Margens",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "49deebbbe8c03ead",
        "type": "tab",
        "label": "Verificação de Stocks",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e1de6a648baf360",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FSM-Dash",
        "server": "90.0.0.18",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "OnS3_Dash",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "150000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "46c8a938095140dd",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FSM-ONS3",
        "server": "90.0.0.18",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "OnS3_FSM",
        "useUTC": true,
        "connectTimeout": "30000",
        "requestTimeout": "30000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "4d557a67e1fb4969",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FSM",
        "server": "90.0.0.18",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "OnS3_Dash",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "66fca4e0d43a824e",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FSM-ONs3 Novo",
        "server": "90.0.30.50",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "OnS3_FSM",
        "useUTC": true,
        "connectTimeout": "30000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "0c921e04db1de770",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FSM_DASH_Novo",
        "server": "90.0.0.18",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "OnS3_Dash",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "c1ac5661abe38939",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FSM_DASH_NEW_SERVER",
        "server": "90.0.30.50",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "OnS3_Dash",
        "useUTC": true,
        "connectTimeout": "30000",
        "requestTimeout": "30000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "57a472c0acddf628",
        "type": "inject",
        "z": "7c71e4ade78eb0e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "7b16c98fe81faaef"
            ]
        ]
    },
    {
        "id": "7b16c98fe81faaef",
        "type": "MSSQL",
        "z": "7c71e4ade78eb0e9",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Nova Query Com limites",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "WITH CTE AS (Select rececoes.DocTypeRececao DocType, rececoes.NrRececao OrderID, rececoes.DocTypeCompraRececao DocTypeOri,rececoes.NrCompraRececao OCOri,compras.nrMRPCompra MRPOri,ops.PartnerName,ops.ItemID, compras.Fornecedor, \nrececoes.ItemRececao CodArtigo, rececoes.QtdRececao QtdRecebida, compras.QtdComprada QtdPedida,compras.QtySatisf, \nCAST(IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)-100 as decimal(18,2)) percExcesso,\nrececoes.DataRececao, compras.DataCompra, FORMAT(rececoes.PrecoRececao, 'C3', 'de-DE') PrecoRececao, FORMAT(compras.PrecoCompra, 'C3', 'de-DE') PrecoCompras,FORMAT(compras.TotalCompra, 'C3', 'de-DE') TotValue,\nFORMAT(IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0), 'C3', 'de-DE') TotValueExcesso,\nIIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) TotValueExcessoInt\n\nfrom (Select cod.DocType DocTypeRececao, cod.OrderID NrRececao, cod.ItemID ItemRececao, CAST(cod.CreationDateTime as date) DataRececao,codo.DocTypeOri DocTypeCompraRececao,codo.OrderIDOri NrCompraRececao, \nAVG(UnitPrice) PrecoRececao,SUM(TotValue) TotalRececao, SUM(cod.QtySatisf) QtdRececao \nfrom ClientOrderDetails cod\njoin ClientOrderDetailsOri codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID and cod.OrderRow=codo.OrderRow\nWhere cod.DocType='RC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri) rececoes\n\njoin\n(Select cod.DocType DocTypeCompra, cod.OrderID NrCompra, cod.ItemID ItemCompra, CAST(cod.CreationDateTime as date) DataCompra,codo.DocTypeOri DocTypeMRPCompra,codo.OrderIDOri nrMRPCompra,PartnerName Fornecedor,\nAVG(UnitPrice) PrecoCompra,SUM(cod.QtyOrd)*AVG(UnitPrice) TotalCompra, SUM(cod.QtyOrd) QtdComprada, SUM(cod.QtySatisf) QtySatisf\nfrom ClientOrderDetails cod\njoin (Select Distinct DocType, OrderID, DocTypeOri, OrderIDOri from ClientOrderDetailsOri where DocTypeOri='MRP') codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID\njoin (Select Distinct DocType, OrderID, ClientID, p.PartnerName from ClientOrders co \n        join (Select PartnerID, PartnerName From BusinessPartners Where PartnerType='F') p on p.PartnerID=co.ClientID Where DocType='OC') client \non client.DocType=cod.DocType and client.OrderID=codo.OrderID\nWhere cod.DocType='OC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri, PartnerName) compras\non compras.DocTypeCompra=rececoes.DocTypeCompraRececao and compras.NrCompra=rececoes.NrCompraRececao and compras.ItemCompra=rececoes.ItemRececao\n\njoin\n(Select DISTINCT opOri.DocType, opOri.OrderID, clients.ClientID, clients.PartnerName, itens.ItemID, oc.ItemID Componente\nfrom (Select DISTINCT DocType, OrderID,OrderRow, DocTypeOri, OrderIDOri from ClientOrderDetailsOri Where DocType='OC' and DocTypeOri in ('OP', 'OPC')) opOri\njoin (Select DocType, OrderID,OrderRow,  ItemID from ClientOrderDetails Where DocType='OC') oc\non oc.DocType=opOri.DocType and oc.OrderID=opOri.OrderID and oc.OrderRow=opOri.OrderRow\njoin (Select DISTINCT DocType, OrderID, ClientID, bp.PartnerName \n        from ClientOrders co\n        join BusinessPartners bp on bp.PartnerID=co.ClientID and PartnerType='C' and DocType in ('OP', 'OPC')) clients on clients.DocType=opOri.DocTypeOri and clients.OrderID=opOri.OrderIDOri\njoin (Select DISTINCT DocType, OrderID, ItemID from ClientOrderDetails Where DocType in ('OP', 'OPC') and productionStatus not in ('ANULADO','ANULADA', 'CANCELADA') ) itens on itens.DocType=opOri.DocTypeOri and itens.OrderID=opOri.OrderIDOri) ops\non ops.DocType=rececoes.DocTypeCompraRececao and ops.OrderID=rececoes.NrCompraRececao and ops.Componente=rececoes.ItemRececao\n\nWhere (((rececoes.ItemRececao LIKE 'MFOR%' OR rececoes.ItemRececao LIKE 'MTEC%') AND IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) > 200)\n    OR ((rececoes.ItemRececao NOT LIKE 'MFOR%' AND rececoes.ItemRececao NOT LIKE 'MTEC%') AND IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) > 50))\nAND rececoes.DataRececao>=DATEADD(Day, -1, convert(date,CAST(GETDATE() as date))) and IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)>103)\n\nSELECT \n    DocType, OrderID, DocTypeOri,OCOri,MRPOri,\n\tSTRING_AGG(PartnerName, '/') PartnerName,\n\tSTRING_AGG(ItemID, '/') ItemID, \n\tFornecedor, CodArtigo,QtdRecebida,QtdPedida,QtySatisf, percExcesso,DataRececao, DataCompra, \n\tPrecoRececao, PrecoCompras,TotValue,\n\tTotValueExcesso,TotValueExcessoInt\nFROM (\n    SELECT DISTINCT DocType, OrderID, DocTypeOri,OCOri,MRPOri,\n\tPartnerName,\n\tItemID,Fornecedor, CodArtigo,QtdRecebida,QtdPedida,QtySatisf, percExcesso,DataRececao, DataCompra, \n\tPrecoRececao, PrecoCompras,TotValue,\n\tTotValueExcesso,TotValueExcessoInt\n    FROM CTE\n) AS DistinctValues\nGROUP BY \n    DocType, \n    OrderID, \n    DocTypeOri,OCOri,MRPOri, Fornecedor, CodArtigo,QtdRecebida,QtdPedida,QtySatisf, percExcesso,DataRececao, DataCompra, \n\tPrecoRececao, PrecoCompras,TotValue,\n\tTotValueExcesso,TotValueExcessoInt\n",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 370,
        "y": 40,
        "wires": [
            [
                "1e0efe22d4190522",
                "a9f46cb702b98ce6"
            ]
        ]
    },
    {
        "id": "1e0efe22d4190522",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "function 2",
        "func": "msg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 40,
        "wires": [
            [
                "01c55bdea987ea19"
            ]
        ]
    },
    {
        "id": "0a384673d5b1229e",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 40,
        "wires": []
    },
    {
        "id": "8834981e555a91de",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 100,
        "wires": []
    },
    {
        "id": "2054172cb7b62b9f",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "patricia.diz@fsm.pt",
        "dname": "",
        "x": 1490,
        "y": 160,
        "wires": []
    },
    {
        "id": "e8e8a81b192076a4",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fsm.daf@fsm.pt",
        "dname": "",
        "x": 1480,
        "y": 220,
        "wires": []
    },
    {
        "id": "01c55bdea987ea19",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "Create Template Email Com Limites",
        "func": "function removeDuplicates(inputString) {\n    // Divide a string em um array\n    const items = inputString.split(\"/\");\n\n    // Remove os duplicados usando Set\n    const uniqueItems = [...new Set(items)];\n\n    // Junta os itens únicos de volta em uma string\n    return uniqueItems.join(\" // \");\n}\nlet euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate() - 1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.PartnerName) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.ItemID) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocType + \".\" + i.OrderID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocTypeOri + \".\" + i.OCOri + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Fornecedor + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.CodArtigo + \"</td>\"\n    /*html_aux = html_aux + \"<td>\" + i.DescArtigo + \"</td>\"*/\n    html_aux = html_aux + \"<td>\" + i.QtdPedida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtdRecebida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtySatisf + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.percExcesso + \"%</td>\"\n    html_aux = html_aux + \"<td>\" + i.TotValueExcesso + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE EXCEDENTES DE \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Doc Receção</th>\" +\n    \"<th>Doc Compra</th>\" +\n    \"<th>Fornecedor</th>\" +\n    \"<th>Cod Artigo</th>\" +\n    /*\"<th>Desc Artigo</th>\" +*/\n    \"<th>Qtd Pedida</th>\" +\n    \"<th>Qtd Recebida</th>\" +\n    \"<th>Qtd Recebida Total</th>\" +\n    \"<th>% Excesso</th>\" +\n    \"<th>Valor Total Excesso €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE EXCEDENTES FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 40,
        "wires": [
            [
                "0a384673d5b1229e",
                "2054172cb7b62b9f",
                "8834981e555a91de",
                "e8e8a81b192076a4",
                "1e3f5025464d05ab",
                "2e1cced76e13c507",
                "7e2a3a40691caf59",
                "953401b41b82d04e",
                "0b901a72db47cd50",
                "7c50fa61a4a8d12a",
                "9ac94ca479dc921d",
                "7775f2f0d2b6674e"
            ]
        ]
    },
    {
        "id": "1865225a48c5451e",
        "type": "inject",
        "z": "7c71e4ade78eb0e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 02 * * 2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "7b16c98fe81faaef"
            ]
        ]
    },
    {
        "id": "1e3f5025464d05ab",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "filipe.guimaraes@fsm.pt",
        "dname": "",
        "x": 1510,
        "y": 340,
        "wires": []
    },
    {
        "id": "2e1cced76e13c507",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "samuel.correia@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 400,
        "wires": []
    },
    {
        "id": "7e2a3a40691caf59",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "joao.vieira@fsm.pt",
        "dname": "",
        "x": 1490,
        "y": 460,
        "wires": []
    },
    {
        "id": "953401b41b82d04e",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "celia.bessa@fsm.pt",
        "dname": "",
        "x": 1490,
        "y": 520,
        "wires": []
    },
    {
        "id": "6ab4b1b99a940b41",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "sandra.soares@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 580,
        "wires": []
    },
    {
        "id": "0b901a72db47cd50",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 1490,
        "y": 640,
        "wires": []
    },
    {
        "id": "9d937cae55084018",
        "type": "MSSQL",
        "z": "7c71e4ade78eb0e9",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Antiga Query",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "Select codRececao.DocType, codRececao.OrderID, codRececao.OrderRow, codo.DocTypeOri,codo.OrderIDOri OCOri,codCompras.mrpOrigem MRPOri,codCompras.OPOri,productions.PartnerName, productions.ItemID, codCompras.PartnerName Fornecedor, \ncodRececao.ItemID CodArtigo,codCompras.ItemDesc DescArtigo, codRececao.QtySatisf QtdRecebida, codCompras.QtyOrd QtdPedida,codCompras.QtySatisf,opComp.TotQty QtdOP, \nCAST(IIF(codCompras.QtyOrd>0,((codCompras.QtySatisf*100)/codCompras.QtyOrd),0)-100 as decimal(18,2)) percExcesso,\ncodRececao.CreationDateTime DataRececao, codCompras.DataCompra, FORMAT(codRececao.UnitPrice, 'C3', 'de-DE') PrecoRececao, FORMAT(codCompras.UnitPrice, 'C3', 'de-DE') PrecoCompras,FORMAT(codCompras.TotValue, 'C3', 'de-DE') TotValue,\nFORMAT(IIF(codCompras.UnitPrice>0,(codCompras.QtySatisf-codCompras.QtyOrd)*codCompras.UnitPrice,0), 'C3', 'de-DE') TotValueExcesso\nfrom ClientOrderDetails codRececao join ClientOrderDetailsOri codo on codRececao.OrderID=codo.OrderID and codRececao.OrderRow=codo.OrderRow and codo.DocType='RC'\njoin (SELECT cod.DocType, cod.OrderID, cod.OrderRow, co.ClientID, bp.PartnerName, co.RequesterID,mrp.OrderIDOri mrpOrigem,op.DocTypeOri,op.OrderIDOri OPOri, cod.ItemID, im.ItemDesc, \n\t            cod.QtyOrd, cod.QtySatisf, cod.Unit, cod.UnitPrice, (cod.UnitPrice * cod.QtyOrd * (1+(cod.PerCstAdic /100) )) TotValue, cod.PerCstAdic, co.Currency, cod.StartConfectionDate, cod.EndConfectionDate, cod.EndConfectionDateReal, \n\t            cod.ProductionStatus, cod.WHID, cod.CreationDateTime DataCompra\n            FROM ClientOrderDetails cod (NOLOCK)\n            JOIN DocumentStatus ds (NOLOCK) on ds.DocType = cod.doctype and ds.DocStatusID = cod.ProductionStatus   AND ds.IsAnulated = 0 \n            JOIN ItemMaster im (NOLOCK) on im.ItemID = cod.ItemID\n            JOIN ClientOrders co (NOLOCK) on co.DocType = cod.DocType and co.OrderID = cod.OrderID\n            JOIN (Select DISTINCT OrderID,OrderRow, DocTypeOri, OrderIDOri from ClientOrderDetailsOri Where DocType='OC' and DocTypeOri='MRP') mrp on mrp.OrderID=co.OrderID and mrp.OrderRow=cod.OrderRow\n            JOIN (Select DISTINCT OrderID,OrderRow, DocTypeOri, OrderIDOri from ClientOrderDetailsOri Where DocType='OC' and DocTypeOri in ('OP','OPC')) op on op.OrderID=co.OrderID and op.OrderRow=cod.OrderRow\n            JOIN BusinessPartners bp (NOLOCK) on bp.PartnerID = co.ClientID and bp.PartnerType='F'\n            WHERE co.DocType = 'OC' ) codCompras on codCompras.DocType=codo.DocTypeOri and codCompras.OrderID=codo.OrderIDOri and codCompras.OrderRow=codo.OrderRowOri and codCompras.ItemID=codRececao.ItemID\nand codRececao.ItemId=codCompras.ItemID\njoin (Select DISTINCT cod.DocType,cod.OrderID, cod.ItemID, cod.ItemDesc1, p.PartnerName\nfrom ClientOrderDetails cod\njoin ClientOrders co on co.OrderID=cod.OrderID and co.DocType=cod.DocType\nJOIN BusinessPartners p on co.ClientID=p.PartnerID and p.PartnerType='C'\nWhere cod.DocType in ('OP', 'OPC')) productions on productions.OrderID=codCompras.OPOri and productions.DocType=codCompras.DocTypeOri\njoin (Select DocType, OrderID, ComponentID, SUM(UnitQty) UnitQty, SUM(TotQty) TotQty, AVG(UnitPrice) UnitPrice\nfrom ClientOrderComp\nWhere DocType in ('OP', 'OPC')\nGroup by DocType, OrderID, ComponentID) opComp on opComp.DocType=productions.DocType and opComp.OrderID=productions.OrderID and codRececao.ItemID=opComp.ComponentID\nWhere codRececao.DocType='RC' and codRececao.CreationDateTime>=DATEADD(Day, -1, convert(date,FORMAT(GETDATE(),'yyyy-MM-dd'))) and IIF(codCompras.QtyOrd>0,((codCompras.QtySatisf*100)/codCompras.QtyOrd),0)>103\nOrder by productions.ItemID ",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 390,
        "y": 400,
        "wires": [
            [
                "5da2d9bea063e959"
            ]
        ]
    },
    {
        "id": "5da2d9bea063e959",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "function 3",
        "func": "msg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "0caff85f0dcc48a7"
            ]
        ]
    },
    {
        "id": "0caff85f0dcc48a7",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "Create Template Email",
        "func": "let euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate()-1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.ItemID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocType + \".\" + i.OrderID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocTypeOri + \".\" + i.OCOri + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Fornecedor + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.CodArtigo + \"</td>\"\n    /*html_aux = html_aux + \"<td>\" + i.DescArtigo + \"</td>\"*/\n    html_aux = html_aux + \"<td>\" + i.QtdPedida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtdRecebida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtySatisf + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.percExcesso + \"%</td>\"\n    html_aux = html_aux + \"<td>\" + i.TotValueExcesso + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE EXCEDENTES DE \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Doc Receção</th>\" +\n    \"<th>Doc Compra</th>\" +\n    \"<th>Fornecedor</th>\" +\n    \"<th>Cod Artigo</th>\" +\n    /*\"<th>Desc Artigo</th>\" +*/\n    \"<th>Qtd Pedida</th>\" +\n    \"<th>Qtd Recebida</th>\" +\n    \"<th>Qtd Recebida Total</th>\" +\n    \"<th>% Excesso</th>\" +\n    \"<th>Valor Total Excesso €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE EXCEDENTES POR LINHAS FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "713a457cb05aee0b",
        "type": "inject",
        "z": "7c71e4ade78eb0e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 03 * * 2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1514e68b705a7f20",
        "type": "inject",
        "z": "7c71e4ade78eb0e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "9d937cae55084018"
            ]
        ]
    },
    {
        "id": "9ac94ca479dc921d",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "placido.santos@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 700,
        "wires": []
    },
    {
        "id": "7c50fa61a4a8d12a",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 280,
        "wires": []
    },
    {
        "id": "8a5bae338aac8c20",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "Create Template Email Completo",
        "func": "function removeDuplicates(inputString) {\n    // Divide a string em um array\n    const items = inputString.split(\"/\");\n\n    // Remove os duplicados usando Set\n    const uniqueItems = [...new Set(items)];\n\n    // Junta os itens únicos de volta em uma string\n    return uniqueItems.join(\" // \");\n}\nlet euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate() - 1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.PartnerName) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.ItemID) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocType + \".\" + i.OrderID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocTypeOri + \".\" + i.OCOri + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Fornecedor + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.CodArtigo + \"</td>\"\n    /*html_aux = html_aux + \"<td>\" + i.DescArtigo + \"</td>\"*/\n    html_aux = html_aux + \"<td>\" + i.QtdPedida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtdRecebida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtySatisf + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.percExcesso + \"%</td>\"\n    html_aux = html_aux + \"<td>\" + i.TotValueExcesso + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE EXCEDENTES COMPLETO DE \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Doc Receção</th>\" +\n    \"<th>Doc Compra</th>\" +\n    \"<th>Fornecedor</th>\" +\n    \"<th>Cod Artigo</th>\" +\n    /*\"<th>Desc Artigo</th>\" +*/\n    \"<th>Qtd Pedida</th>\" +\n    \"<th>Qtd Recebida</th>\" +\n    \"<th>Qtd Recebida Total</th>\" +\n    \"<th>% Excesso</th>\" +\n    \"<th>Valor Total Excesso €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE EXCEDENTES COMPLETO FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 200,
        "wires": [
            [
                "0a384673d5b1229e"
            ]
        ]
    },
    {
        "id": "a9f46cb702b98ce6",
        "type": "MSSQL",
        "z": "7c71e4ade78eb0e9",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Nova Query Completo",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "WITH CTE AS (Select rececoes.DocTypeRececao DocType, rececoes.NrRececao OrderID, rececoes.DocTypeCompraRececao DocTypeOri,rececoes.NrCompraRececao OCOri,compras.nrMRPCompra MRPOri,ops.PartnerName,ops.ItemID, compras.Fornecedor, \nrececoes.ItemRececao CodArtigo, rececoes.QtdRececao QtdRecebida, compras.QtdComprada QtdPedida,compras.QtySatisf, \nCAST(IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)-100 as decimal(18,2)) percExcesso,\nrececoes.DataRececao, compras.DataCompra, FORMAT(rececoes.PrecoRececao, 'C3', 'de-DE') PrecoRececao, FORMAT(compras.PrecoCompra, 'C3', 'de-DE') PrecoCompras,FORMAT(compras.TotalCompra, 'C3', 'de-DE') TotValue,\nFORMAT(IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0), 'C3', 'de-DE') TotValueExcesso,\nIIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) TotValueExcessoInt\n\nfrom (Select cod.DocType DocTypeRececao, cod.OrderID NrRececao, cod.ItemID ItemRececao, CAST(cod.CreationDateTime as date) DataRececao,codo.DocTypeOri DocTypeCompraRececao,codo.OrderIDOri NrCompraRececao, \nAVG(UnitPrice) PrecoRececao,SUM(TotValue) TotalRececao, SUM(cod.QtySatisf) QtdRececao \nfrom ClientOrderDetails cod\njoin ClientOrderDetailsOri codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID and cod.OrderRow=codo.OrderRow\nWhere cod.DocType='RC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri) rececoes\n\njoin\n(Select cod.DocType DocTypeCompra, cod.OrderID NrCompra, cod.ItemID ItemCompra, CAST(cod.CreationDateTime as date) DataCompra,codo.DocTypeOri DocTypeMRPCompra,codo.OrderIDOri nrMRPCompra,PartnerName Fornecedor,\nAVG(UnitPrice) PrecoCompra,SUM(cod.QtyOrd)*AVG(UnitPrice) TotalCompra, SUM(cod.QtyOrd) QtdComprada, SUM(cod.QtySatisf) QtySatisf\nfrom ClientOrderDetails cod\njoin (Select Distinct DocType, OrderID, DocTypeOri, OrderIDOri from ClientOrderDetailsOri where DocTypeOri='MRP') codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID\njoin (Select Distinct DocType, OrderID, ClientID, p.PartnerName from ClientOrders co \n        join (Select PartnerID, PartnerName From BusinessPartners Where PartnerType='F') p on p.PartnerID=co.ClientID Where DocType='OC') client \non client.DocType=cod.DocType and client.OrderID=codo.OrderID\nWhere cod.DocType='OC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri, PartnerName) compras\non compras.DocTypeCompra=rececoes.DocTypeCompraRececao and compras.NrCompra=rececoes.NrCompraRececao and compras.ItemCompra=rececoes.ItemRececao\n\njoin\n(Select DISTINCT opOri.DocType, opOri.OrderID, clients.ClientID, clients.PartnerName, itens.ItemID, oc.ItemID Componente\nfrom (Select DISTINCT DocType, OrderID,OrderRow, DocTypeOri, OrderIDOri from ClientOrderDetailsOri Where DocType='OC' and DocTypeOri in ('OP', 'OPC')) opOri\njoin (Select DocType, OrderID,OrderRow,  ItemID from ClientOrderDetails Where DocType='OC') oc\non oc.DocType=opOri.DocType and oc.OrderID=opOri.OrderID and oc.OrderRow=opOri.OrderRow\njoin (Select DISTINCT DocType, OrderID, ClientID, bp.PartnerName \n        from ClientOrders co\n        join BusinessPartners bp on bp.PartnerID=co.ClientID and PartnerType='C' and DocType in ('OP', 'OPC')) clients on clients.DocType=opOri.DocTypeOri and clients.OrderID=opOri.OrderIDOri\njoin (Select DISTINCT DocType, OrderID, ItemID from ClientOrderDetails Where DocType in ('OP', 'OPC')) itens on itens.DocType=opOri.DocTypeOri and itens.OrderID=opOri.OrderIDOri) ops\non ops.DocType=rececoes.DocTypeCompraRececao and ops.OrderID=rececoes.NrCompraRececao and ops.Componente=rececoes.ItemRececao\n\nWhere rececoes.DataRececao>=DATEADD(Day, -1, convert(date,CAST(GETDATE() as date))) and IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)>103 \n)\n\nSELECT \n    DocType, OrderID, DocTypeOri,OCOri,MRPOri,\n\tSTRING_AGG(PartnerName, '/') PartnerName,\n\tSTRING_AGG(ItemID, '/') ItemID, \n\tFornecedor, CodArtigo,QtdRecebida,QtdPedida,QtySatisf, percExcesso,DataRececao, DataCompra, \n\tPrecoRececao, PrecoCompras,TotValue,\n\tTotValueExcesso,TotValueExcessoInt\nFROM (\n    SELECT DISTINCT DocType, OrderID, DocTypeOri,OCOri,MRPOri,\n\tPartnerName,\n\tItemID,Fornecedor, CodArtigo,QtdRecebida,QtdPedida,QtySatisf, percExcesso,DataRececao, DataCompra, \n\tPrecoRececao, PrecoCompras,TotValue,\n\tTotValueExcesso,TotValueExcessoInt\n    FROM CTE\n) AS DistinctValues\nGROUP BY \n    DocType, \n    OrderID, \n    DocTypeOri,OCOri,MRPOri, Fornecedor, CodArtigo,QtdRecebida,QtdPedida,QtySatisf, percExcesso,DataRececao, DataCompra, \n\tPrecoRececao, PrecoCompras,TotValue,\n\tTotValueExcesso,TotValueExcessoInt\n",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "2e49f318c9f027e2"
            ]
        ]
    },
    {
        "id": "2e49f318c9f027e2",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "function 4",
        "func": "msg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "8a5bae338aac8c20"
            ]
        ]
    },
    {
        "id": "a42e10a701a92c60",
        "type": "MSSQL",
        "z": "7c71e4ade78eb0e9",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Antiga Query Completos",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "Select rececoes.DocTypeRececao DocType, rececoes.NrRececao OrderID, rececoes.DocTypeCompraRececao DocTypeOri,rececoes.NrCompraRececao OCOri,compras.nrMRPCompra MRPOri,ops.PartnerName,ops.ItemID, compras.Fornecedor, \nrececoes.ItemRececao CodArtigo, rececoes.QtdRececao QtdRecebida, compras.QtdComprada QtdPedida,compras.QtySatisf, \nCAST(IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)-100 as decimal(18,2)) percExcesso,\nrececoes.DataRececao, compras.DataCompra, FORMAT(rececoes.PrecoRececao, 'C3', 'de-DE') PrecoRececao, FORMAT(compras.PrecoCompra, 'C3', 'de-DE') PrecoCompras,FORMAT(compras.TotalCompra, 'C3', 'de-DE') TotValue,\nFORMAT(IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0), 'C3', 'de-DE') TotValueExcesso,\nIIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) TotValueExcessoInt\n\nfrom (Select cod.DocType DocTypeRececao, cod.OrderID NrRececao, cod.ItemID ItemRececao, CAST(cod.CreationDateTime as date) DataRececao,codo.DocTypeOri DocTypeCompraRececao,codo.OrderIDOri NrCompraRececao, \nAVG(UnitPrice) PrecoRececao,SUM(TotValue) TotalRececao, SUM(cod.QtySatisf) QtdRececao \nfrom ClientOrderDetails cod\njoin ClientOrderDetailsOri codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID and cod.OrderRow=codo.OrderRow\nWhere cod.DocType='RC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri) rececoes\n\njoin\n(Select cod.DocType DocTypeCompra, cod.OrderID NrCompra, cod.ItemID ItemCompra, CAST(cod.CreationDateTime as date) DataCompra,codo.DocTypeOri DocTypeMRPCompra,codo.OrderIDOri nrMRPCompra,PartnerName Fornecedor,\nAVG(UnitPrice) PrecoCompra,SUM(cod.QtyOrd)*AVG(UnitPrice) TotalCompra, SUM(cod.QtyOrd) QtdComprada, SUM(cod.QtySatisf) QtySatisf\nfrom ClientOrderDetails cod\njoin (Select Distinct DocType, OrderID, DocTypeOri, OrderIDOri from ClientOrderDetailsOri where DocTypeOri='MRP') codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID\njoin (Select Distinct DocType, OrderID, ClientID, p.PartnerName from ClientOrders co \n        join (Select PartnerID, PartnerName From BusinessPartners Where PartnerType='F') p on p.PartnerID=co.ClientID Where DocType='OC') client \non client.DocType=cod.DocType and client.OrderID=codo.OrderID\nWhere cod.DocType='OC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri, PartnerName) compras\non compras.DocTypeCompra=rececoes.DocTypeCompraRececao and compras.NrCompra=rececoes.NrCompraRececao and compras.ItemCompra=rececoes.ItemRececao\n\njoin\n(Select DISTINCT opOri.DocType, opOri.OrderID, clients.ClientID, clients.PartnerName, itens.ItemID, oc.ItemID Componente\nfrom (Select DISTINCT DocType, OrderID,OrderRow, DocTypeOri, OrderIDOri from ClientOrderDetailsOri Where DocType='OC' and DocTypeOri in ('OP', 'OPC')) opOri\njoin (Select DocType, OrderID,OrderRow,  ItemID from ClientOrderDetails Where DocType='OC') oc\non oc.DocType=opOri.DocType and oc.OrderID=opOri.OrderID and oc.OrderRow=opOri.OrderRow\njoin (Select DISTINCT DocType, OrderID, ClientID, bp.PartnerName \n        from ClientOrders co\n        join BusinessPartners bp on bp.PartnerID=co.ClientID and PartnerType='C' and DocType in ('OP', 'OPC')) clients on clients.DocType=opOri.DocTypeOri and clients.OrderID=opOri.OrderIDOri\njoin (Select DISTINCT DocType, OrderID, ItemID from ClientOrderDetails Where DocType in ('OP', 'OPC')) itens on itens.DocType=opOri.DocTypeOri and itens.OrderID=opOri.OrderIDOri) ops\non ops.DocType=rececoes.DocTypeCompraRececao and ops.OrderID=rececoes.NrCompraRececao and ops.Componente=rececoes.ItemRececao\n\nWhere rececoes.DataRececao>=DATEADD(Day, -1, convert(date,CAST(GETDATE() as date))) and IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)>103 \n",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "06655bd1601c32cb",
        "type": "MSSQL",
        "z": "7c71e4ade78eb0e9",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Antiga Query com os limites",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "Select rececoes.DocTypeRececao DocType, rececoes.NrRececao OrderID, rececoes.DocTypeCompraRececao DocTypeOri,rececoes.NrCompraRececao OCOri,compras.nrMRPCompra MRPOri,ops.PartnerName,ops.ItemID, compras.Fornecedor, \nrececoes.ItemRececao CodArtigo, rececoes.QtdRececao QtdRecebida, compras.QtdComprada QtdPedida,compras.QtySatisf, \nCAST(IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)-100 as decimal(18,2)) percExcesso,\nrececoes.DataRececao, compras.DataCompra, FORMAT(rececoes.PrecoRececao, 'C3', 'de-DE') PrecoRececao, FORMAT(compras.PrecoCompra, 'C3', 'de-DE') PrecoCompras,FORMAT(compras.TotalCompra, 'C3', 'de-DE') TotValue,\nFORMAT(IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0), 'C3', 'de-DE') TotValueExcesso,\nIIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) TotValueExcessoInt\n\nfrom (Select cod.DocType DocTypeRececao, cod.OrderID NrRececao, cod.ItemID ItemRececao, CAST(cod.CreationDateTime as date) DataRececao,codo.DocTypeOri DocTypeCompraRececao,codo.OrderIDOri NrCompraRececao, \nAVG(UnitPrice) PrecoRececao,SUM(TotValue) TotalRececao, SUM(cod.QtySatisf) QtdRececao \nfrom ClientOrderDetails cod\njoin ClientOrderDetailsOri codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID and cod.OrderRow=codo.OrderRow\nWhere cod.DocType='RC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri) rececoes\n\njoin\n(Select cod.DocType DocTypeCompra, cod.OrderID NrCompra, cod.ItemID ItemCompra, CAST(cod.CreationDateTime as date) DataCompra,codo.DocTypeOri DocTypeMRPCompra,codo.OrderIDOri nrMRPCompra,PartnerName Fornecedor,\nAVG(UnitPrice) PrecoCompra,SUM(cod.QtyOrd)*AVG(UnitPrice) TotalCompra, SUM(cod.QtyOrd) QtdComprada, SUM(cod.QtySatisf) QtySatisf\nfrom ClientOrderDetails cod\njoin (Select Distinct DocType, OrderID, DocTypeOri, OrderIDOri from ClientOrderDetailsOri where DocTypeOri='MRP') codo on cod.DocType=codo.DocType and cod.OrderID=codo.OrderID\njoin (Select Distinct DocType, OrderID, ClientID, p.PartnerName from ClientOrders co \n        join (Select PartnerID, PartnerName From BusinessPartners Where PartnerType='F') p on p.PartnerID=co.ClientID Where DocType='OC') client \non client.DocType=cod.DocType and client.OrderID=codo.OrderID\nWhere cod.DocType='OC'\nGroup by cod.DocType, cod.OrderID, cod.ItemID, CAST(cod.CreationDateTime as date),codo.DocTypeOri,codo.OrderIDOri, PartnerName) compras\non compras.DocTypeCompra=rececoes.DocTypeCompraRececao and compras.NrCompra=rececoes.NrCompraRececao and compras.ItemCompra=rececoes.ItemRececao\n\njoin\n(Select DISTINCT opOri.DocType, opOri.OrderID, clients.ClientID, clients.PartnerName, itens.ItemID, oc.ItemID Componente\nfrom (Select DISTINCT DocType, OrderID,OrderRow, DocTypeOri, OrderIDOri from ClientOrderDetailsOri Where DocType='OC' and DocTypeOri in ('OP', 'OPC')) opOri\njoin (Select DocType, OrderID,OrderRow,  ItemID from ClientOrderDetails Where DocType='OC') oc\non oc.DocType=opOri.DocType and oc.OrderID=opOri.OrderID and oc.OrderRow=opOri.OrderRow\njoin (Select DISTINCT DocType, OrderID, ClientID, bp.PartnerName \n        from ClientOrders co\n        join BusinessPartners bp on bp.PartnerID=co.ClientID and PartnerType='C' and DocType in ('OP', 'OPC')) clients on clients.DocType=opOri.DocTypeOri and clients.OrderID=opOri.OrderIDOri\njoin (Select DISTINCT DocType, OrderID, ItemID from ClientOrderDetails Where DocType in ('OP', 'OPC')) itens on itens.DocType=opOri.DocTypeOri and itens.OrderID=opOri.OrderIDOri) ops\non ops.DocType=rececoes.DocTypeCompraRececao and ops.OrderID=rececoes.NrCompraRececao and ops.Componente=rececoes.ItemRececao\n\nWhere (((rececoes.ItemRececao LIKE 'MFOR%' OR rececoes.ItemRececao LIKE 'MTEC%') AND IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) > 200)\n    OR ((rececoes.ItemRececao NOT LIKE 'MFOR%' AND rececoes.ItemRececao NOT LIKE 'MTEC%') AND IIF(compras.PrecoCompra>0,(compras.QtySatisf-compras.QtdComprada)*compras.PrecoCompra,0) > 50))\nAND rececoes.DataRececao>=DATEADD(Day, -1, convert(date,CAST(GETDATE() as date))) and IIF(compras.QtdComprada>0,((compras.QtySatisf*100)/compras.QtdComprada),0)>103 \n",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 440,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "0d51578c96348eb8",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "Create Template Email Completo Teste",
        "func": "function removeDuplicates(inputString) {\n    // Divide a string em um array\n    const items = inputString.split(\"/\");\n\n    // Remove os duplicados usando Set\n    const uniqueItems = [...new Set(items)];\n\n    // Junta os itens únicos de volta em uma string\n    return uniqueItems.join(\" // \");\n}\nlet euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate()-1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.PartnerName) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.ItemID) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocType + \".\" + i.OrderID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.DocTypeOri + \".\" + i.OCOri + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Fornecedor + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.CodArtigo + \"</td>\"\n    /*html_aux = html_aux + \"<td>\" + i.DescArtigo + \"</td>\"*/\n    html_aux = html_aux + \"<td>\" + i.QtdPedida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtdRecebida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtySatisf + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.percExcesso + \"%</td>\"\n    html_aux = html_aux + \"<td>\" + i.TotValueExcesso + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE EXCEDENTES COMPLETO DE \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Doc Receção</th>\" +\n    \"<th>Doc Compra</th>\" +\n    \"<th>Fornecedor</th>\" +\n    \"<th>Cod Artigo</th>\" +\n    /*\"<th>Desc Artigo</th>\" +*/\n    \"<th>Qtd Pedida</th>\" +\n    \"<th>Qtd Recebida</th>\" +\n    \"<th>Qtd Recebida Total</th>\" +\n    \"<th>% Excesso</th>\" +\n    \"<th>Valor Total Excesso €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE EXCEDENTES COMPLETO FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "0a384673d5b1229e"
            ]
        ]
    },
    {
        "id": "54e28a81585d29c5",
        "type": "function",
        "z": "7c71e4ade78eb0e9",
        "name": "Create Template Email com Limites Teste",
        "func": "function removeDuplicates(inputString) {\n    // Divide a string em um array\n    const items = inputString.split(\"/\");\n\n    // Remove os duplicados usando Set\n    const uniqueItems = [...new Set(items)];\n\n    // Junta os itens únicos de volta em uma string\n    return uniqueItems.join(\" // \");\n}\nlet euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate()-1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n        html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.PartnerName) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + removeDuplicates(i.ItemID) + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.DocType + \".\" + i.OrderID + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.DocTypeOri + \".\" + i.OCOri + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.Fornecedor + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.CodArtigo + \"</td>\"\n        /*html_aux = html_aux + \"<td>\" + i.DescArtigo + \"</td>\"*/\n        html_aux = html_aux + \"<td>\" + i.QtdPedida + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.QtdRecebida + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.QtySatisf + \"</td>\"\n        html_aux = html_aux + \"<td>\" + i.percExcesso + \"%</td>\"\n        html_aux = html_aux + \"<td>\" + i.TotValueExcesso + \"</td>\"\n        html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE EXCEDENTES DE \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Doc Receção</th>\" +\n    \"<th>Doc Compra</th>\" +\n    \"<th>Fornecedor</th>\" +\n    \"<th>Cod Artigo</th>\" +\n    /*\"<th>Desc Artigo</th>\" +*/\n    \"<th>Qtd Pedida</th>\" +\n    \"<th>Qtd Recebida</th>\" +\n    \"<th>Qtd Recebida Total</th>\" +\n    \"<th>% Excesso</th>\" +\n    \"<th>Valor Total Excesso €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE EXCEDENTES FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 100,
        "wires": [
            [
                "0a384673d5b1229e"
            ]
        ]
    },
    {
        "id": "7775f2f0d2b6674e",
        "type": "e-mail",
        "z": "7c71e4ade78eb0e9",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rita.ribeiro@fsm.pt",
        "dname": "",
        "x": 1490,
        "y": 740,
        "wires": []
    },
    {
        "id": "7fdc6427904c36fe",
        "type": "inject",
        "z": "f12c30ed7e28c309",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "dfbabadd7eb7ca2b"
            ]
        ]
    },
    {
        "id": "e477213ff43b305a",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Dutti Senhora",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='SENHORA'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "518e20c95925855e"
            ]
        ]
    },
    {
        "id": "aef633fab25d834d",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1480,
        "y": 1380,
        "wires": []
    },
    {
        "id": "30b099d1df1de276",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Dutti Senhora",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\n\nfunction vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022=i.Soma\n        }\n        else if(i.ano===year-1){\n             a2021=i.Soma\n        }\n        else if(i.ano===year-2){\n             a2020=i.Soma\n        }\n        else if(i.ano===year-3){\n             a2019=i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\n\"<h4>ACUMULADOS DE VENDAS - MASSIMO DUTTI WOMEN</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 220,
        "wires": [
            [
                "4abee21a20f08125"
            ]
        ]
    },
    {
        "id": "518e20c95925855e",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "30b099d1df1de276"
            ]
        ]
    },
    {
        "id": "4abee21a20f08125",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Dutti Camisas",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 440,
        "y": 280,
        "wires": [
            [
                "74734466ab7fc720"
            ]
        ]
    },
    {
        "id": "d4cf2ebf1ec0377d",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Dutti Camisas",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022=i.Soma\n        }\n        else if(i.ano===year-1){\n             a2021=i.Soma\n        }\n        else if(i.ano===year-2){\n             a2020=i.Soma\n        }\n        else if(i.ano===year-3){\n             a2019=i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\n\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - MASSIMO DUTTI MEN - Camisas</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 280,
        "wires": [
            [
                "961f0518aa8babc8"
            ]
        ]
    },
    {
        "id": "74734466ab7fc720",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "d4cf2ebf1ec0377d"
            ]
        ]
    },
    {
        "id": "dfbabadd7eb7ca2b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "var html=\"<!DOCTYPE html>\"+\n\"<html>\"+\n\"<head>\"+\n\"<style>\"+\n\"table {\"+\n  \"font-family: arial, sans-serif;\"+\n  \"border-collapse: collapse;\"+\n  \"width: 100%;\"+\n\"}\"+\n\"h4 {\" +\n  \"font-family: 'Arial', sans-serif;\" +\n  \"font-size: 12px;\" +\n\"}\" +\n\"td{\"+\n  \"border: 1px solid #dddddd;\"+\n  \"text-align: right;\"+\n  \"padding: 8px;\"+\n  \"font-size: 10px;\"+\n\"}\"+\n\"th{\"+\n \"border: 1px solid #dddddd;\"+\n  \"text-align: left;\"+\n  \"padding: 8px;\"+\n  \"font-size: 10px;\" +\n\"}\"+\n\n\"tr:nth-child(even) {\"+\n  \"background-color: #dddddd;\"+\n\"}\"+\n\"</style>\"+\n\"</head>\"+\n\"<body>\"+\n\"<h4> Boa Noite.</h4>\"+\n\"<div></div> <h4> Segue abaixo as Vendas da FSM por Cliente.</h4>\"\n\nglobal.set('html', html)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 160,
        "wires": [
            [
                "57bde101b09fd83d"
            ]
        ]
    },
    {
        "id": "961f0518aa8babc8",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Dutti Homem Outro",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='6' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "50f5e0c667745366"
            ]
        ]
    },
    {
        "id": "201150b6db7ce391",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Dutti Homem Outros",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022=i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\n\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - MASSIMO DUTTI MEN - Outros</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nmsg.payload=global.get('html')\nmsg.from='ricardo.ferreira@fsm.pt'\nmsg.topic='Vendas FSM'\nmsg.plaintext='text/html'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 340,
        "wires": [
            [
                "adb0542eecf5871b"
            ]
        ]
    },
    {
        "id": "50f5e0c667745366",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "201150b6db7ce391"
            ]
        ]
    },
    {
        "id": "57bde101b09fd83d",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "FSM Global",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and YEAR(m.DataDoc)=YEAR(GETDATE())\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and MONTH(m.DataDoc)=MONTH (GETDATE())\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m\nWhere m.AreaCod='Vendas' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 160,
        "wires": [
            [
                "4965f12e69491477"
            ]
        ]
    },
    {
        "id": "a3c4b22a88e9492f",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template FSM Global",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR', \n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0, })\n    \nfunction vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\n\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year.toFixed(0)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\n\"<h4>ACUMULADOS DE VENDAS - FSM</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 160,
        "wires": [
            [
                "e477213ff43b305a"
            ]
        ]
    },
    {
        "id": "4965f12e69491477",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "a3c4b22a88e9492f"
            ]
        ]
    },
    {
        "id": "adb0542eecf5871b",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Stear Total",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 400,
        "wires": [
            [
                "21e6cd72b17050de"
            ]
        ]
    },
    {
        "id": "02542d6975bdca70",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Stear Total",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022=i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - STEAR</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 400,
        "wires": [
            [
                "10740cdd3981a844"
            ]
        ]
    },
    {
        "id": "21e6cd72b17050de",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 400,
        "wires": [
            [
                "02542d6975bdca70"
            ]
        ]
    },
    {
        "id": "10740cdd3981a844",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Inditex Men Camisas",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr='CAMISA'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 460,
        "y": 480,
        "wires": [
            [
                "621e37fd8c6e4fbf"
            ]
        ]
    },
    {
        "id": "f817848b732ac4ab",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Inditex Men Camisas",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - INDITEX MEN - Camisas</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 480,
        "wires": [
            [
                "845dae9394a2b633"
            ]
        ]
    },
    {
        "id": "621e37fd8c6e4fbf",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 480,
        "wires": [
            [
                "f817848b732ac4ab"
            ]
        ]
    },
    {
        "id": "845dae9394a2b633",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Inditex Men Outros",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr='HOMEM' and CategoryDescr!='CAMISA'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 450,
        "y": 540,
        "wires": [
            [
                "c916b45d8353396c"
            ]
        ]
    },
    {
        "id": "6b0475d15ed909ef",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Inditex Men Outros",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - INDITEX MEN - Outros</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 540,
        "wires": [
            [
                "fd615d6c01492850"
            ]
        ]
    },
    {
        "id": "c916b45d8353396c",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 540,
        "wires": [
            [
                "6b0475d15ed909ef"
            ]
        ]
    },
    {
        "id": "fd615d6c01492850",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Inditex women-kids",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='1970' and i.ItemID=m.ItemID and SubCategoryDescr!='HOMEM'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 450,
        "y": 600,
        "wires": [
            [
                "949905024b94dfbd"
            ]
        ]
    },
    {
        "id": "33a546188292cc46",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Inditex Women-Kids",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - INDITEX WOMEN+KIDS</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 600,
        "wires": [
            [
                "4e782cc63a0d9e0d"
            ]
        ]
    },
    {
        "id": "949905024b94dfbd",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 600,
        "wires": [
            [
                "33a546188292cc46"
            ]
        ]
    },
    {
        "id": "4e782cc63a0d9e0d",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Hugo Boss",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3774' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3774' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3774' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3774' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3774' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3774' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3774' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 660,
        "wires": [
            [
                "99efe8577ab3688b"
            ]
        ]
    },
    {
        "id": "e44acec0a6838c4b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Hugo Boss",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - HUGO BOSS</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 660,
        "wires": [
            [
                "bfd73bac13e0140e"
            ]
        ]
    },
    {
        "id": "99efe8577ab3688b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 660,
        "wires": [
            [
                "e44acec0a6838c4b"
            ]
        ]
    },
    {
        "id": "1af9670c1d53df62",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Dutti Homem Outros",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022=i.Soma\n        }\n        else if(i.ano===year-1){\n             a2021=i.Soma\n        }\n        else if(i.ano===year-2){\n             a2020=i.Soma\n        }\n        else if(i.ano===year-3){\n             a2019=i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = Intl.NumberFormat(\"de-DE\", {\n    style: \"currency\",\n    currency: \"EUR\",\n});\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>Vendas Totais Massimo Dutti Camisa</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th></th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Vendas Totais</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Vendas de 01/01/\"+year+\" a \"+datestring+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Vendas Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Vendas de 01/\"+(d.getMonth()+1)+\"/\"+year+\" a \"+datestring+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n\"</table></body>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nmsg.payload=global.get('html')\nmsg.from='ricardo.ferreira@fsm.pt'\nmsg.topic='Vendas FSM'\nmsg.plaintext='text/html'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "bfd73bac13e0140e",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Tommy",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='2376' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='2376' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='2376' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='2376' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='2376' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='2376' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='2376' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 420,
        "y": 720,
        "wires": [
            [
                "bf890cc11fea651d"
            ]
        ]
    },
    {
        "id": "23cec0ea8f1cc595",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Tommy",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - TOMMY HILFIGHER</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 720,
        "wires": [
            [
                "e678e81632c5e30e"
            ]
        ]
    },
    {
        "id": "bf890cc11fea651d",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 720,
        "wires": [
            [
                "23cec0ea8f1cc595"
            ]
        ]
    },
    {
        "id": "677e96f04cfb3529",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Punto",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3010' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3010' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3010' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3010' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3010' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3010' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3010' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 1580,
        "wires": [
            [
                "30aa20350a0a0913"
            ]
        ]
    },
    {
        "id": "f2f07233f9483f55",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "PUNTO",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - MANGO</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "30aa20350a0a0913",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1580,
        "wires": [
            [
                "f2f07233f9483f55"
            ]
        ]
    },
    {
        "id": "a7b1608b72d660b8",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "C&A",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID in ('3542', '3467', '3492') and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 1700,
        "wires": [
            [
                "cf3e420f33079f3f"
            ]
        ]
    },
    {
        "id": "79b10c49a3444b8d",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template C&A",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - C & A</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1700,
        "wires": [
            [
                "30606848d26226ed"
            ]
        ]
    },
    {
        "id": "cf3e420f33079f3f",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1700,
        "wires": [
            [
                "79b10c49a3444b8d"
            ]
        ]
    },
    {
        "id": "30606848d26226ed",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "TILLEY",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3661' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3661' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3661' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3661' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3661' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3661' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3661' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 440,
        "y": 1760,
        "wires": [
            [
                "88cc2afa7421054c"
            ]
        ]
    },
    {
        "id": "c55b5ce46a3f6de7",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template TILLEY",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - TILLEY ENDURABLES INC.</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n    \"</table><div></div></body>\"\nvar html_global = global.get('html')\nhtml_aux = html_global + html_aux\nglobal.set('html', html_aux)\nmsg.payload = global.get('html')\nmsg.from = 'ricardo.ferreira@fsm.pt'\nmsg.topic = 'Vendas FSM'\nmsg.plaintext = 'text/html'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "88cc2afa7421054c",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1760,
        "wires": [
            [
                "c55b5ce46a3f6de7"
            ]
        ]
    },
    {
        "id": "05010a896b064ab2",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1480,
        "y": 1180,
        "wires": []
    },
    {
        "id": "bb1f5d1b143d0994",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fsm.daf@fsm.pt",
        "dname": "",
        "x": 1460,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9c37376390873acb",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 1470,
        "y": 1260,
        "wires": []
    },
    {
        "id": "af1f6c0fcc1b7712",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "antonio.ferreira@fsm.pt",
        "dname": "",
        "x": 1490,
        "y": 1300,
        "wires": []
    },
    {
        "id": "38eb52b28fef9bf1",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fernando.machado@fsm.pt",
        "dname": "",
        "x": 1500,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2937e22ce79d75f0",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "patricia.diz@fsm.pt",
        "dname": "",
        "x": 1470,
        "y": 1420,
        "wires": []
    },
    {
        "id": "8210dd10659ef4d5",
        "type": "inject",
        "z": "f12c30ed7e28c309",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 19 * * 1,2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "dfbabadd7eb7ca2b"
            ]
        ]
    },
    {
        "id": "b341f3b47259e35e",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Toteme",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3813' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3813' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3813' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3813' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3813' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3813' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3813' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 420,
        "y": 840,
        "wires": [
            [
                "7f8c81661b5aa89a"
            ]
        ]
    },
    {
        "id": "7f8c81661b5aa89a",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 840,
        "wires": [
            [
                "17268e522e7a1130"
            ]
        ]
    },
    {
        "id": "17268e522e7a1130",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Toteme",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - TOTEME AB</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 840,
        "wires": [
            [
                "c7b67b7545079258"
            ]
        ]
    },
    {
        "id": "e678e81632c5e30e",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Aritzia",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3725' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3725' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3725' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3725' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3725' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3725' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3725' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 410,
        "y": 780,
        "wires": [
            [
                "16aa8ed6059258c6"
            ]
        ]
    },
    {
        "id": "16aa8ed6059258c6",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 780,
        "wires": [
            [
                "bcd5ef234e4d520c"
            ]
        ]
    },
    {
        "id": "bcd5ef234e4d520c",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Aritzia",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - ARITZIA</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 780,
        "wires": [
            [
                "b341f3b47259e35e"
            ]
        ]
    },
    {
        "id": "c7b67b7545079258",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "H&M",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID in ('3995', '3996', '4076', '4077', '4078', '4079', '4080', '4081') and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 410,
        "y": 900,
        "wires": [
            [
                "b25a0e97231a73cf"
            ]
        ]
    },
    {
        "id": "b25a0e97231a73cf",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 900,
        "wires": [
            [
                "d118fa2d3b0a75b8"
            ]
        ]
    },
    {
        "id": "d118fa2d3b0a75b8",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template H & M",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - H & M</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 900,
        "wires": [
            [
                "a5dea6697f7e5590"
            ]
        ]
    },
    {
        "id": "a5dea6697f7e5590",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "HERNO SPA",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3907' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3907' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3907' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3907' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3907' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3907' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3907' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 960,
        "wires": [
            [
                "1f3fc6b5fdd5a277"
            ]
        ]
    },
    {
        "id": "1f3fc6b5fdd5a277",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 960,
        "wires": [
            [
                "6a0eeaa8bfe10de5"
            ]
        ]
    },
    {
        "id": "6a0eeaa8bfe10de5",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template HERNO SPA",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - HERNO SPA</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 960,
        "wires": [
            [
                "fbce135df5eab0fa"
            ]
        ]
    },
    {
        "id": "ec4a6d98138959a5",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "EILEEN FISHER",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3997' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3997' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3997' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3997' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3997' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3997' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3997' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "b440774e321b1752"
            ]
        ]
    },
    {
        "id": "b440774e321b1752",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1340,
        "wires": [
            [
                "399fb7ccc5945e7b"
            ]
        ]
    },
    {
        "id": "399fb7ccc5945e7b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template EILEEN FISHER",
        "func": "function vendas(values) {\n    var htmlValues = \"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022 = 0\n    var a2021 = 0\n    var a2020 = 0\n    var a2019 = 0\n\n    values.map(i => {\n        if (i.ano === year) {\n            a2022 = i.Soma\n        }\n        else if (i.ano === year - 1) {\n            a2021 = i.Soma\n        }\n        else if (i.ano === year - 2) {\n            a2020 = i.Soma\n        }\n        else if (i.ano === year - 3) {\n            a2019 = i.Soma\n        }\n    })\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2022) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2021) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2020) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2019) + \"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values) {\n    var htmlValues = \"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma) + \"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values = msg.payload\n\nvar year_html = \"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear()\nyear_html = year_html + \"<td>\" + year + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 1) + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 2) + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 3) + \"</td>\"\n\n\nvar vendasTotais = vendas(values[0])\nvar vendasData = vendasAno(values)\nvar vendasMes = vendas(values[5])\nvar vendasMesData = vendas(values[6])\n\nvar html_aux = \"<h4>ACUMULADOS DE VENDAS - EILEEN FISHER</h4>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Total Vendas</th>\" +\n    year_html +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total Ano</td>\" +\n    vendasTotais +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total de 01/01 a \" + d.getDate() + \"/\" + (d.getMonth() + 1) + \"</td>\" +\n    vendasData +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total de 01/\" + (d.getMonth() + 1) + \" a \" + d.getDate() + \"/\" + (d.getMonth() + 1) + \"</td>\" +\n    vendasMesData +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total Mês</td>\" +\n    vendasMes +\n    \"</tr>\" +\n    \"</table><div></div></body>\"\nvar html_global = global.get('html')\nhtml_aux = html_global + html_aux\nglobal.set('html', html_aux)\nmsg.payload = global.get('html')\nmsg.from = 'ricardo.ferreira@fsm.pt'\nmsg.topic = 'Vendas FSM'\nmsg.plaintext = 'text/html'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1340,
        "wires": [
            [
                "aef633fab25d834d",
                "9c37376390873acb",
                "bb1f5d1b143d0994",
                "05010a896b064ab2",
                "e532507dc6d5cf90",
                "af1f6c0fcc1b7712",
                "38eb52b28fef9bf1",
                "79137beeaaecd24c"
            ]
        ]
    },
    {
        "id": "fbce135df5eab0fa",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "LAMAREL",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3648' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3648' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3648' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3648' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3648' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3648' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3648' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "7c9c9183c2976b97"
            ]
        ]
    },
    {
        "id": "7c9c9183c2976b97",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1020,
        "wires": [
            [
                "54ab84128aa48f0b"
            ]
        ]
    },
    {
        "id": "54ab84128aa48f0b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template LAMAREL",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - LAMAREL</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1020,
        "wires": [
            [
                "0084bc7e2413b1c4"
            ]
        ]
    },
    {
        "id": "0084bc7e2413b1c4",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "MACKINTOSH",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID in ('3994', '4063') and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "612c561c9aa4712d"
            ]
        ]
    },
    {
        "id": "612c561c9aa4712d",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1080,
        "wires": [
            [
                "2c4820413bd22563"
            ]
        ]
    },
    {
        "id": "2c4820413bd22563",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template MACKINTOSH",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - MACKINTOSH</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1080,
        "wires": [
            [
                "ae307f776de9504b"
            ]
        ]
    },
    {
        "id": "ae307f776de9504b",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "MAX MARA",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='2' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='2' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='2' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='2' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='2' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='2' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='2' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 410,
        "y": 1140,
        "wires": [
            [
                "5e75c7ed34a3da4f"
            ]
        ]
    },
    {
        "id": "5e75c7ed34a3da4f",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1140,
        "wires": [
            [
                "7a6d975a45275e42"
            ]
        ]
    },
    {
        "id": "7a6d975a45275e42",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template MAX MARA",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - MAX MARA</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1140,
        "wires": [
            [
                "7a416a0206f3312b"
            ]
        ]
    },
    {
        "id": "7a416a0206f3312b",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "THE KOOPLES",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='2444' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='2444' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='2444' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='2444' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='2444' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='2444' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='2444' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 420,
        "y": 1200,
        "wires": [
            [
                "f23c6fdfbd1a5d91"
            ]
        ]
    },
    {
        "id": "f23c6fdfbd1a5d91",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1200,
        "wires": [
            [
                "4fc616ec0bef7b2b"
            ]
        ]
    },
    {
        "id": "4fc616ec0bef7b2b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template THE KOOPLES",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - THE KOOPLES</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1200,
        "wires": [
            [
                "738dc485542770ce"
            ]
        ]
    },
    {
        "id": "738dc485542770ce",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "100% CAPRI",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3890' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3890' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3890' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3890' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3890' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3890' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3890' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 410,
        "y": 1260,
        "wires": [
            [
                "b2a611448a5c2ab7"
            ]
        ]
    },
    {
        "id": "b2a611448a5c2ab7",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "5422988052b8411b"
            ]
        ]
    },
    {
        "id": "5422988052b8411b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template 100% CAPRI",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - 100% CAPRI</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1260,
        "wires": [
            [
                "ec4a6d98138959a5"
            ]
        ]
    },
    {
        "id": "e532507dc6d5cf90",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1480,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3fed468fb18fa9f4",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template EILEEN FISHER TESTE",
        "func": "function vendas(values) {\n    var htmlValues = \"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022 = 0\n    var a2021 = 0\n    var a2020 = 0\n    var a2019 = 0\n\n    values.map(i => {\n        if (i.ano === year) {\n            a2022 = i.Soma\n        }\n        else if (i.ano === year - 1) {\n            a2021 = i.Soma\n        }\n        else if (i.ano === year - 2) {\n            a2020 = i.Soma\n        }\n        else if (i.ano === year - 3) {\n            a2019 = i.Soma\n        }\n    })\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2022) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2021) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2020) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2019) + \"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values) {\n    var htmlValues = \"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma) + \"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values = msg.payload\n\nvar year_html = \"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear()\nyear_html = year_html + \"<td>\" + year + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 1) + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 2) + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 3) + \"</td>\"\n\n\nvar vendasTotais = vendas(values[0])\nvar vendasData = vendasAno(values)\nvar vendasMes = vendas(values[5])\nvar vendasMesData = vendas(values[6])\n\nvar html_aux = \"<h4>ACUMULADOS DE VENDAS - EILEEN FISHER</h4>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Total Vendas</th>\" +\n    year_html +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total Ano</td>\" +\n    vendasTotais +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total de 01/01 a \" + d.getDate() + \"/\" + (d.getMonth() + 1) + \"</td>\" +\n    vendasData +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total de 01/\" + (d.getMonth() + 1) + \" a \" + d.getDate() + \"/\" + (d.getMonth() + 1) + \"</td>\" +\n    vendasMesData +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total Mês</td>\" +\n    vendasMes +\n    \"</tr>\" +\n    \"</table><div></div></body>\"\nvar html_global = global.get('html')\nhtml_aux = html_global + html_aux\nglobal.set('html', html_aux)\nmsg.payload = global.get('html')\nmsg.from = 'ricardo.ferreira@fsm.pt'\nmsg.topic = 'Vendas FSM'\nmsg.plaintext = 'text/html'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1440,
        "wires": [
            [
                "aef633fab25d834d",
                "05010a896b064ab2"
            ]
        ]
    },
    {
        "id": "22550b8c776258e6",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Stear Casacos",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr='CASACO'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 440,
        "y": 1840,
        "wires": [
            [
                "5ed39d155a13e009"
            ]
        ]
    },
    {
        "id": "5ed39d155a13e009",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1840,
        "wires": [
            [
                "85d86f26d4d1bc2c"
            ]
        ]
    },
    {
        "id": "85d86f26d4d1bc2c",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Stear Casacos",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022=i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - STEAR - Casacos</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1840,
        "wires": [
            [
                "93c8e8777dd7708d"
            ]
        ]
    },
    {
        "id": "93c8e8777dd7708d",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Stear Outro",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3' and i.ItemID=m.ItemID and CategoryDescr!='CASACO'\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 1900,
        "wires": [
            [
                "1d9e38e58589313e"
            ]
        ]
    },
    {
        "id": "1d9e38e58589313e",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1900,
        "wires": [
            [
                "7ee679c28589f5a9"
            ]
        ]
    },
    {
        "id": "7ee679c28589f5a9",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template Stear Outro",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - STEAR - Outros</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "e60271e061c38530",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "DUNNES STORE",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3133' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3133' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3133' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3133' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3133' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3133' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3133' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 450,
        "y": 1640,
        "wires": [
            [
                "9d18f631853b8443"
            ]
        ]
    },
    {
        "id": "9d18f631853b8443",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1640,
        "wires": [
            [
                "8d491383b7971125"
            ]
        ]
    },
    {
        "id": "8d491383b7971125",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template DUNNES STORES",
        "func": "function vendas(values) {\n    var htmlValues = \"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022 = 0\n    var a2021 = 0\n    var a2020 = 0\n    var a2019 = 0\n\n    values.map(i => {\n        if (i.ano === year) {\n            a2022 = i.Soma\n        }\n        else if (i.ano === year - 1) {\n            a2021 = i.Soma\n        }\n        else if (i.ano === year - 2) {\n            a2020 = i.Soma\n        }\n        else if (i.ano === year - 3) {\n            a2019 = i.Soma\n        }\n    })\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2022) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2021) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2020) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(a2019) + \"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values) {\n    var htmlValues = \"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma) + \"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma) + \"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values = msg.payload\n\nvar year_html = \"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear()\nyear_html = year_html + \"<td>\" + year + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 1) + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 2) + \"</td>\"\nyear_html = year_html + \"<td>\" + (year - 3) + \"</td>\"\n\n\nvar vendasTotais = vendas(values[0])\nvar vendasData = vendasAno(values)\nvar vendasMes = vendas(values[5])\nvar vendasMesData = vendas(values[6])\n\nvar html_aux = \"<h4>ACUMULADOS DE VENDAS - DUNNES STORES</h4>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Total Vendas</th>\" +\n    year_html +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total Ano</td>\" +\n    vendasTotais +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total de 01/01 a \" + d.getDate() + \"/\" + (d.getMonth() + 1) + \"</td>\" +\n    vendasData +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total de 01/\" + (d.getMonth() + 1) + \" a \" + d.getDate() + \"/\" + (d.getMonth() + 1) + \"</td>\" +\n    vendasMesData +\n    \"</tr>\" +\n    \"<tr>\" +\n    \"<td>Total Mês</td>\" +\n    vendasMes +\n    \"</tr>\" +\n    \"</table><div></div></body>\"\nvar html_global = global.get('html')\nhtml_aux = html_global + html_aux\nglobal.set('html', html_aux)\nmsg.payload = global.get('html')\nmsg.from = 'ricardo.ferreira@fsm.pt'\nmsg.topic = 'Vendas FSM'\nmsg.plaintext = 'text/html'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "79137beeaaecd24c",
        "type": "e-mail",
        "z": "f12c30ed7e28c309",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rita.ribeiro@fsm.pt",
        "dname": "",
        "x": 1470,
        "y": 1460,
        "wires": []
    },
    {
        "id": "22888c4bf48825bb",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "ASPHALTE",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3925' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3925' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3925' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3925' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3925' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3925' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3925' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 430,
        "y": 1960,
        "wires": [
            [
                "264e0f5b43a92dd4"
            ]
        ]
    },
    {
        "id": "264e0f5b43a92dd4",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1960,
        "wires": [
            [
                "5d46a71212716ab5"
            ]
        ]
    },
    {
        "id": "5d46a71212716ab5",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template ASPHALTE",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - ASPHALTE</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "1b4ed3443fa0a711",
        "type": "MSSQL",
        "z": "f12c30ed7e28c309",
        "mssqlCN": "c1ac5661abe38939",
        "name": "ABSOLUTTARGET",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(m.DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)>=YEAR(GETDATE())-3\nand p.PartnerID='3877' and i.ItemID=m.ItemID\nGroup by YEAR(m.DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and YEAR(m.DataDoc)=YEAR(GETDATE())\nand p.PartnerID='3877' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-1,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-1\nand p.PartnerID='3877' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-2,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-2\nand p.PartnerID='3877' and i.ItemID=m.ItemID\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and m.DataDoc<= DATEADD(year,-3,GETDATE()) and YEAR(m.DataDoc)=YEAR(GETDATE())-3\nand p.PartnerID='3877' and i.ItemID=m.ItemID\n\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DATADOC) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE())\nand p.PartnerID='3877' and i.ItemID=m.ItemID\nGroup by YEAR(DATADOC)\nOrder by ano DESC\n\nSelect CAST(SUM(m.TotValue) as decimal(18,0)) as Soma, YEAR(DataDoc) ano\nFrom DocMovs m, Partners p, ItemMaster i\nWhere m.AreaCod='Vendas' and p.PartnerID=m.PartnerID and p.PartnerType='C' and MONTH(m.DataDoc)=MONTH (GETDATE()) and DAY(m.DataDoc)<=DAY (GETDATE())\nand p.PartnerID='3877' and i.ItemID=m.ItemID\nGroup by YEAR(DataDoc)\nOrder by ano DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 450,
        "y": 2020,
        "wires": [
            [
                "822b97d548d02c84"
            ]
        ]
    },
    {
        "id": "822b97d548d02c84",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2020,
        "wires": [
            [
                "e00ed150eec1045b"
            ]
        ]
    },
    {
        "id": "e00ed150eec1045b",
        "type": "function",
        "z": "f12c30ed7e28c309",
        "name": "Create Template ABSOLUTTARGET",
        "func": "function vendas(values){\n    var htmlValues=\"\"\n    const d = new Date();\n    let year = d.getFullYear();\n    var a2022=0\n    var a2021=0\n    var a2020=0\n    var a2019=0\n    \n    values.map(i=>{\n        if(i.ano===year){\n            a2022 = i.Soma\n        }\n        else if(i.ano===year-1){\n            a2021 = i.Soma\n        }\n        else if(i.ano===year-2){\n            a2020 = i.Soma\n        }\n        else if(i.ano===year-3){\n            a2019 = i.Soma\n        }\n    })\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2022)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2021)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2020)+\"</td>\"\n    htmlValues= htmlValues+\"<td>\"+euroGerman.format(a2019)+\"</td>\"\n    return htmlValues;\n}\n\nfunction vendasAno(values){\n    var htmlValues=\"\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[1][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[2][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[3][0].Soma)+\"</td>\"\n    htmlValues = htmlValues + \"<td>\" + euroGerman.format(values[4][0].Soma)+\"</td>\"\n    return htmlValues\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values=msg.payload\n\nvar year_html=\"\"\nconst d = new Date();\nlet year = d.getFullYear();\nvar datestring = d.getDate()  + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\nyear_html= year_html+\"<td>\"+year+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-1)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-2)+\"</td>\"\nyear_html= year_html+\"<td>\"+(year-3)+\"</td>\"\n\n\nvar vendasTotais=vendas(values[0])\nvar vendasData=vendasAno(values)\nvar vendasMes=vendas(values[5])\nvar vendasMesData=vendas(values[6])\n\nvar html_aux =\"<h4>ACUMULADOS DE VENDAS - ABSOLUTTARGET</h4>\"+\n\"<table>\"+\n  \"<tr>\"+\n    \"<th>Total Vendas</th>\"+\n    year_html+\n  \"</tr>\"+\n  \"<tr>\"+\n    \"<td>Total Ano</td>\"+\n    vendasTotais+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/01 a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total de 01/\"+(d.getMonth()+1)+\" a \"+d.getDate()+\"/\"+(d.getMonth()+1)+\"</td>\"+\n    vendasMesData+\n    \"</tr>\"+\n     \"<tr>\"+\n    \"<td>Total Mês</td>\"+\n    vendasMes+\n    \"</tr>\"+\n\"</table>\"\nvar html_global=global.get('html')\nhtml_aux=html_global+html_aux\nglobal.set('html',html_aux)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "34bb2f743ba18719",
        "type": "inject",
        "z": "ec03563f9c5b861e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "5c2a22e106d8294d"
            ]
        ]
    },
    {
        "id": "5c2a22e106d8294d",
        "type": "MSSQL",
        "z": "ec03563f9c5b861e",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Vendas",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select SUM(LineTotal) Total\nfrom OnS3_FSM.dbo.InvoiceSAPBoinvests\nWhere YEAR(DocDate)=YEAR(GETDATE())\n\nBegin\nWITH Months AS (\n    SELECT 1 AS MonthNumber UNION ALL\n    SELECT 2 UNION ALL\n    SELECT 3 UNION ALL\n    SELECT 4 UNION ALL\n    SELECT 5 UNION ALL\n    SELECT 6 UNION ALL\n    SELECT 7 UNION ALL\n    SELECT 8 UNION ALL\n    SELECT 9 UNION ALL\n    SELECT 10 UNION ALL\n    SELECT 11 UNION ALL\n    SELECT 12\n)\nSELECT \n    m.MonthNumber AS Mes,\n    COALESCE(SUM(i.LineTotal), 0) AS TotalVendas\nFROM Months m\nLEFT JOIN OnS3_FSM.dbo.InvoiceSAPBoinvests i\n    ON MONTH(i.DocDate) = m.MonthNumber \n    AND YEAR(i.DocDate) = YEAR(GETDATE())\nGROUP BY m.MonthNumber\nORDER BY m.MonthNumber;\nEND\n\nBegin\nSELECT \n    RIGHT(ItemCode, LEN(ItemCode) - CHARINDEX('.', ItemCode)) AS Cliente,\n    ItemDescription Servico,\n    SUM(CASE \n            WHEN YEAR(DocDate) = YEAR(GETDATE()) THEN LineTotal \n            ELSE 0 \n        END) AS [Total Ano Corrente],\n    SUM(CASE \n            WHEN YEAR(DocDate) = YEAR(GETDATE()) \n            AND MONTH(DocDate) = MONTH(DATEADD(MONTH, -1, GETDATE())) \n            THEN LineTotal \n            ELSE 0 \n        END) AS [Total Mês Anterior],\n    SUM(CASE \n            WHEN YEAR(DocDate) = YEAR(GETDATE()) \n            AND MONTH(DocDate) = MONTH(GETDATE()) \n            THEN LineTotal \n            ELSE 0 \n        END) AS [Total Mês Atual]\nFROM InvoiceSAPBoinvests\nGROUP BY RIGHT(ItemCode, LEN(ItemCode) - CHARINDEX('.', ItemCode)), ItemDescription\nORDER BY RIGHT(ItemCode, LEN(ItemCode) - CHARINDEX('.', ItemCode));\nEND\n\nBegin\nSELECT \n    Project AS Linha,\n    SUM(CASE \n            WHEN YEAR(DocDate) = YEAR(GETDATE()) THEN LineTotal \n            ELSE 0 \n        END) AS [Total Ano Corrente],\n    SUM(CASE \n            WHEN YEAR(DocDate) = YEAR(GETDATE()) \n            AND MONTH(DocDate) = MONTH(DATEADD(MONTH, -1, GETDATE())) \n            THEN LineTotal \n            ELSE 0 \n        END) AS [Total Mês Anterior],\n    SUM(CASE \n            WHEN YEAR(DocDate) = YEAR(GETDATE()) \n            AND MONTH(DocDate) = MONTH(GETDATE()) \n            THEN LineTotal \n            ELSE 0 \n        END) AS [Total Mês Atual]\nFROM InvoiceSAPBoinvests\nGROUP BY Project\nORDER BY [Total Ano Corrente] DESC;\nEND\n\nSELECT SUM(LineTotal) AS Total\nFROM OnS3_FSM.dbo.InvoiceSAPBoinvests\nWHERE YEAR(DocDate) = YEAR(GETDATE())\n  AND MONTH(DocDate) = MONTH(GETDATE())\n\nSELECT SUM(LineTotal) AS Total\nFROM OnS3_FSM.dbo.InvoiceSAPBoinvests\nWHERE \n  DocDate >= DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 1, 0)\n  AND DocDate < DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0)",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 320,
        "y": 100,
        "wires": [
            [
                "81a319ee6fa8dec7"
            ]
        ]
    },
    {
        "id": "81a319ee6fa8dec7",
        "type": "function",
        "z": "ec03563f9c5b861e",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 100,
        "wires": [
            [
                "1d48ca09679daa3f"
            ]
        ]
    },
    {
        "id": "5dce661542e5058d",
        "type": "inject",
        "z": "ec03563f9c5b861e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "5c2a22e106d8294d"
            ]
        ]
    },
    {
        "id": "1d48ca09679daa3f",
        "type": "function",
        "z": "ec03563f9c5b861e",
        "name": "Create Template",
        "func": "function mesEmPortugues(numeroMes) {\n    const meses = [\n        \"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"junho\",\n        \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"\n    ];\n\n    // Ajusta porque arrays começam no 0\n    return meses[numeroMes - 1] || \"Mês inválido\";\n}\nlet euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar valuesTotal = msg.payload[0]\nvar valuesMensal = msg.payload[1]\nvar valuesCliente = msg.payload[2]\nvar valuesLinha= msg.payload[3]\nvar valuesTotalMesAtual = msg.payload[4]\nvar valuesTotalMesAnterior = msg.payload[5]\n\nvar html_aux = \"\"\nvar html_aux_clientes = \"\"\nvar html_aux_linha = \"\"\n\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\n\nvar firstday = new Date(date.setDate(first));\nvar lastday = new Date(firstday).addDays(6);\nvar firstDayFormat = firstday.getDate() + \"/\" + (firstday.getMonth() + 1) + \"/\" + firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1) + \"/\" + lastday.getFullYear()\n\nhtml_aux = html_aux + \"<tr>\"\nhtml_aux = html_aux + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGerman.format((valuesTotal.length > 0 ? valuesTotal[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nvaluesMensal.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + mesEmPortugues(i.Mes) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.TotalVendas) + \"€</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\n\nhtml_aux_clientes = html_aux_clientes + \"<tr>\"\nhtml_aux_clientes = html_aux_clientes + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux_clientes = html_aux_clientes + \"<td></td>\"\nhtml_aux_clientes = html_aux_clientes + \"<td><h4>\" + euroGerman.format((valuesTotal.length > 0 ? valuesTotal[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_clientes = html_aux_clientes + \"<td><h4>\" + euroGerman.format((valuesTotalMesAtual.length > 0 ? valuesTotalMesAtual[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_clientes = html_aux_clientes + \"<td><h4>\" + euroGerman.format((valuesTotalMesAnterior.length > 0 ? valuesTotalMesAnterior[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_clientes = html_aux_clientes + \"<td></td>\"\nhtml_aux_clientes = html_aux_clientes + \"</tr>\"\nvaluesCliente.map(i => {\n    html_aux_clientes = html_aux_clientes + \"<tr>\"\n    html_aux_clientes = html_aux_clientes + \"<td>\" + i.Cliente + \"</td>\"\n    html_aux_clientes = html_aux_clientes + \"<td>\" + i.Servico + \"</td>\"\n    html_aux_clientes = html_aux_clientes + \"<td>\" + euroGerman.format(i['Total Ano Corrente']) + \"€</td>\"\n    html_aux_clientes = html_aux_clientes + \"<td>\" + euroGerman.format(i['Total Mês Atual']) + \"€</td>\"\n    html_aux_clientes = html_aux_clientes + \"<td>\" + euroGerman.format(i['Total Mês Anterior']) + \"€</td>\"\n    html_aux_clientes = html_aux_clientes + \"</tr>\"\n})\n\nhtml_aux_linha = html_aux_linha + \"<tr>\"\nhtml_aux_linha = html_aux_linha + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux_linha = html_aux_linha + \"<td><h4>\" + euroGerman.format((valuesTotal.length > 0 ? valuesTotal[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_linha = html_aux_linha + \"<td><h4>\" + euroGerman.format((valuesTotalMesAtual.length > 0 ? valuesTotalMesAtual[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_linha = html_aux_linha + \"<td><h4>\" + euroGerman.format((valuesTotalMesAnterior.length > 0 ? valuesTotalMesAnterior[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_linha = html_aux_linha + \"</tr>\"\nvaluesLinha.map(i => {\n    html_aux_linha = html_aux_linha + \"<tr>\"\n    html_aux_linha = html_aux_linha + \"<td>\" + i.Linha + \"</td>\"\n    html_aux_linha = html_aux_linha + \"<td>\" + euroGerman.format(i['Total Ano Corrente']) + \"€</td>\"\n    html_aux_linha = html_aux_linha + \"<td>\" + euroGerman.format(i['Total Mês Atual']) + \"€</td>\"\n    html_aux_linha = html_aux_linha + \"<td>\" + euroGerman.format(i['Total Mês Anterior']) + \"€</td>\"\n    html_aux_linha = html_aux_linha + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 12px;\" +\n    \"padding: 6px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Boa Noite.</h4>\" +\n    \"<h4> Segue abaixo as vendas da BOINVEST</h4>\" +\n    \"<div></div>\" +\n    \"<h4> VENDAS BOINVEST POR LINHA A \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Linha</th>\" +\n    \"<th>Total Anual €</th>\" +\n    \"<th>Total Mês Atual €</th>\" +\n    \"<th>Total Mês Anterior €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_linha\nhtml = html + \"</table> <br></br>\" +\n    \"<h4> VENDAS BOINVEST POR CLIENTE FSM A \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Serviço</th>\" +\n    \"<th>Total Anual €</th>\" +\n    \"<th>Total Mês Atual €</th>\" +\n    \"<th>Total Mês Anterior €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_clientes\nhtml = html + \"</table><br></br>\"\nhtml = html + \"</table> <br></br>\" +\n    \"<h4> VENDAS MENSAIS DA BOINVEST A \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Mês</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table><br></br> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'VENDAS BOINVEST A ' + dateNow + '.';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 160,
        "wires": [
            [
                "da29a3b1cfa64e64",
                "4897bb8e1d1f5f6a",
                "fa730a1d99ffe3cd",
                "7fec9cf4d04036da",
                "607111b8ae2c7adf"
            ]
        ]
    },
    {
        "id": "da29a3b1cfa64e64",
        "type": "e-mail",
        "z": "ec03563f9c5b861e",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 160,
        "wires": []
    },
    {
        "id": "4897bb8e1d1f5f6a",
        "type": "e-mail",
        "z": "ec03563f9c5b861e",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa730a1d99ffe3cd",
        "type": "e-mail",
        "z": "ec03563f9c5b861e",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 280,
        "wires": []
    },
    {
        "id": "7fec9cf4d04036da",
        "type": "e-mail",
        "z": "ec03563f9c5b861e",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fsm.daf@fsm.pt",
        "dname": "",
        "x": 1060,
        "y": 340,
        "wires": []
    },
    {
        "id": "607111b8ae2c7adf",
        "type": "e-mail",
        "z": "ec03563f9c5b861e",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "5c9329811a558a30",
        "type": "inject",
        "z": "2cc8840c3c65c436",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "8b7eead94bbab966"
            ]
        ]
    },
    {
        "id": "8b7eead94bbab966",
        "type": "MSSQL",
        "z": "2cc8840c3c65c436",
        "mssqlCN": "c1ac5661abe38939",
        "name": "Plan Entregas Portugal",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select cli.PartnerName Cliente,d.ItemID, SubCategoryDescr, CategoryDescr, SUM(QtyDoc) QtyDoc, AVG(d.UnitPrice) UnitPrice, CAST(SUM(TotValue) as decimal(18,0)) Total,\n                        DateAdd(HOUR, 1,d.DataDoc) as DataDoc, f.PartnerName Fabrica\n                        from DocMovs d\n                        join (Select PartnerName, PartnerID from Partners WHere PartnerType='F' and PartnerGroup in ('PT_OUTROS', 'PT_FSM')) f on f.PartnerID=d.PartnerID\n                        join (Select PartnerID, PartnerName from Partners Where PartnerType='C') cli on cli.PartnerID=d.PartnerIDENC\n                        join (Select ItemID,ItemDESC, SubCategoryDescr, CategoryDescr from ItemMaster) i on i.ItemID=d.ItemID\n                        Where AreaCod='Planeamento' and SubAreaCod='PLANENTREGAS' and YEAR(DataDoc)>=YEAR(GETDATE()) and DATADOC>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and DATADOC<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\n                        Group by d.ItemID, SubCategoryDescr, CategoryDescr, DataDoc, f.PartnerName, cli.PartnerName\n                        Order by d.DataDoc\n                        \n\nSelect cli.PartnerName Cliente,d.ItemID, SubCategoryDescr, CategoryDescr, SUM(QtyDoc) QtyDoc, AVG(d.UnitPrice) UnitPrice, CAST(SUM(TotValue) as decimal(18,0)) Total,\n                        DateAdd(HOUR, 1,d.DataDoc) as DataDoc, f.PartnerName Fabrica\n                        from DocMovs d\n                        join (Select PartnerName, PartnerID from Partners WHere PartnerType='F' and PartnerGroup in ('MA_FSM','MA_FES-MEK', 'MA_TANGER')) f on f.PartnerID=d.PartnerID\n                        join (Select PartnerID, PartnerName from Partners Where PartnerType='C') cli on cli.PartnerID=d.PartnerIDENC\n                        join (Select ItemID,ItemDESC, SubCategoryDescr, CategoryDescr from ItemMaster) i on i.ItemID=d.ItemID\n                        Where AreaCod='Planeamento' and SubAreaCod='PLANENTREGAS' and YEAR(DataDoc)>=YEAR(GETDATE()) and DATADOC>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and DATADOC<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\n                        Group by d.ItemID, SubCategoryDescr, CategoryDescr, DataDoc, f.PartnerName, cli.PartnerName\n                        Order by d.DataDoc\n\nSelect SUM(QtyDoc) QtyDoc, CAST(SUM(TotValue) as decimal(18,0)) Total, DATEPART(week, DataDoc) Week\n                        from DocMovs d\n                        join (Select PartnerID, PartnerName from Partners Where PartnerType='F' and PartnerGroup in ('PT_OUTROS', 'PT_FSM')) f on f.PartnerID=d.PartnerID\n                        join (Select ItemID,ItemDESC, SubCategoryDescr, CategoryDescr from ItemMaster) i on i.ItemID=d.ItemID\n                        Where AreaCod='Planeamento' and SubAreaCod='PLANENTREGAS' and YEAR(DataDoc)>=YEAR(GETDATE()) and DATADOC>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and DATADOC<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\n                        Group by DATEPART(week, DataDoc)\n                        Order by Week\n\nSelect SUM(QtyDoc) QtyDoc, CAST(SUM(TotValue) as decimal(18,0)) Total, DATEPART(week, DataDoc) Week\n                        from DocMovs d\n                        join (Select PartnerID, PartnerName from Partners Where PartnerType='F' and PartnerGroup in ('MA_FSM','MA_FES-MEK', 'MA_TANGER')) f on f.PartnerID=d.PartnerID\n                        join (Select ItemID,ItemDESC, SubCategoryDescr, CategoryDescr from ItemMaster) i on i.ItemID=d.ItemID\n                        Where AreaCod='Planeamento' and SubAreaCod='PLANENTREGAS' and YEAR(DataDoc)>=YEAR(GETDATE()) and DATADOC>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and DATADOC<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\n                        Group by DATEPART(week, DataDoc)\n                        Order by Week",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "e81d57b5aa7ebd80"
            ]
        ]
    },
    {
        "id": "e81d57b5aa7ebd80",
        "type": "function",
        "z": "2cc8840c3c65c436",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 120,
        "wires": [
            [
                "6ade6cb6fb1522d5"
            ]
        ]
    },
    {
        "id": "6ade6cb6fb1522d5",
        "type": "function",
        "z": "2cc8840c3c65c436",
        "name": "Create Template",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nvar values = msg.payload[0]\nvar valuesMarrocos = msg.payload[1]\nvar valuesTotal = msg.payload[2]\nvar valuesMarrocosTotal = msg.payload[3]\n\nvar html_aux = \"\"\nvar html_aux_marrocos = \"\"\n\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\n\nvar firstday = new Date(date.setDate(first));\nvar lastday = new Date(firstday).addDays(6);\nvar firstDayFormat = firstday.getDate() + \"/\" + (firstday.getMonth() + 1) + \"/\" + firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1) + \"/\" + lastday.getFullYear()\n\nhtml_aux = html_aux + \"<tr>\"\nhtml_aux = html_aux + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux = html_aux + \"<td></td>\"\nhtml_aux = html_aux + \"<td></td>\"\nhtml_aux = html_aux + \"<td></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + (valuesTotal.length > 0 ? valuesTotal[0].QtyDoc : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGerman.format((valuesTotal.length > 0 ? valuesTotal[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux = html_aux + \"<td></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_marrocos = html_aux_marrocos + \"<tr>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td><h4>\" + (valuesMarrocosTotal.length>0?valuesMarrocosTotal[0].QtyDoc:0)+ \"</h4></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td><h4>\" + euroGerman.format((valuesMarrocosTotal.length > 0 ? valuesMarrocosTotal[0].Total : 0)) + \"€</h4></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"<td></td>\"\nhtml_aux_marrocos = html_aux_marrocos + \"</tr>\"\n\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.Cliente + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Fabrica + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.ItemID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.CategoryDescr + \" \"+ i.SubCategoryDescr+\"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QtyDoc + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.UnitPrice) + \"€</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.Total) + \"€</td>\"\n    html_aux = html_aux + \"<td>\" + new Date(i.DataDoc).getDate() + \"/\" + (new Date(i.DataDoc).getMonth() + 1) + \"/\" + new Date(i.DataDoc).getFullYear()+ \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\n\nvaluesMarrocos.map(i => {\n    html_aux_marrocos = html_aux_marrocos + \"<tr>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + i.Cliente + \"</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + i.Fabrica + \"</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + i.ItemID + \"</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + i.CategoryDescr + \" \" + i.SubCategoryDescr + \"</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + i.QtyDoc + \"</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + euroGerman.format(i.UnitPrice) + \"€</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + euroGerman.format(i.Total) + \"€</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"<td>\" + new Date(i.DataDoc).getDate() + \"/\" + (new Date(i.DataDoc).getMonth() + 1) + \"/\" + new Date(i.DataDoc).getFullYear() + \"</td>\"\n    html_aux_marrocos = html_aux_marrocos + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> PLANO ENTREGAS PORTUGAL DE \" + firstDayFormat + \" A \"+lastDayFormat+\"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Fábrica</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Categoria</th>\" +\n    \"<th>Quantidade</th>\" +\n    \"<th>Preço Unit €</th>\" +\n    \"<th>Total €</th>\" +\n    \"<th>Data</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml=html+\"</table> <br></br>\"+\n    \"<h4> PLANO ENTREGAS MARROCOS DE \" + firstDayFormat + \" A \" + lastDayFormat + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Fábrica</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>Categoria</th>\" +\n    \"<th>Quantidade</th>\" +\n    \"<th>Preço Unit €</th>\" +\n    \"<th>Total €</th>\" +\n    \"<th>Data</th>\" +\n    \"</tr>\"\nhtml=html+html_aux_marrocos\nhtml = html + \"</table><br></br> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'PLANO ENTREGAS FSM DE ' + firstDayFormat + ' A '+lastDayFormat+'.';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 120,
        "wires": [
            [
                "0f483452c6480fbf",
                "232d25aedd07c45d",
                "c4664063f0965b50",
                "ee1cbb80d8a128e1",
                "f94f641d4cba356e",
                "a547aae8492480a3"
            ]
        ]
    },
    {
        "id": "0f483452c6480fbf",
        "type": "e-mail",
        "z": "2cc8840c3c65c436",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1200,
        "y": 120,
        "wires": []
    },
    {
        "id": "232d25aedd07c45d",
        "type": "e-mail",
        "z": "2cc8840c3c65c436",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fsm.daf@fsm.pt",
        "dname": "",
        "x": 1180,
        "y": 180,
        "wires": []
    },
    {
        "id": "c4664063f0965b50",
        "type": "e-mail",
        "z": "2cc8840c3c65c436",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1200,
        "y": 240,
        "wires": []
    },
    {
        "id": "ee1cbb80d8a128e1",
        "type": "e-mail",
        "z": "2cc8840c3c65c436",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 1190,
        "y": 300,
        "wires": []
    },
    {
        "id": "9894df41647b1adb",
        "type": "inject",
        "z": "2cc8840c3c65c436",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 10 * * 1",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "8b7eead94bbab966"
            ]
        ]
    },
    {
        "id": "cc26ad11901b7aba",
        "type": "debug",
        "z": "2cc8840c3c65c436",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "f94f641d4cba356e",
        "type": "e-mail",
        "z": "2cc8840c3c65c436",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1200,
        "y": 420,
        "wires": []
    },
    {
        "id": "a547aae8492480a3",
        "type": "e-mail",
        "z": "2cc8840c3c65c436",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rita.ribeiro@fsm.pt",
        "dname": "",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "ac3d3e5e3c9b5197",
        "type": "inject",
        "z": "4825264caacc700a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "9f27adedc5f528ba"
            ]
        ]
    },
    {
        "id": "9f27adedc5f528ba",
        "type": "MSSQL",
        "z": "4825264caacc700a",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Amostras",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "/*Valores de Amostras Globais*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\ngroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Valores de Amostras Por Semana*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand cod.CreationDateTime>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and cod.CreationDateTime<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\ngroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Valores de Amostras Globais Totais*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\nOrder by Total DESC\n\n/*Valores de Amostras Por Semana Totais*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand cod.CreationDateTime>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and cod.CreationDateTime<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\nOrder by Total DESC\n\n/*Valores de Amostras Globais Ano Anterior*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\ngroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Valores de Amostras Globais Ano Anterior Total*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\nOrder by Total DESC\n\n/*Count de Encomendas Global*/\nSelect p.PartnerID, p.PartnerName,COUNT(*) Total\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n        and cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tgroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Count de Encomendas Por Quantidade Global*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\n\tfrom ClientOrderDetails cod\n\tjoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tWhere cod.DocType='OP' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and\n    cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0\n\tgroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Count de Encomendas Global Totais*/\nSelect COUNT(*) Total\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and \n\t\tcod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\nOrder by Total DESC\n\n/*Count de Encomendas Por Quantidade Global Totais*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\nWhere cod.DocType='OP' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and\ncod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0\nOrder by Total DESC\n\n/*Racio Totais Enc-Amostras\nBegin\n\nWITH sample_counts AS (\n    Select SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tjoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\n\tWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and cod.Versao not like '3%' and cod.Versao not like '4%'\n),\norder_counts AS (\n    Select COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and \n\t\tcod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n)\n-- Unindo as duas contagens\nSELECT \n    CASE \n        WHEN oc.total_orders = 0 THEN NULL\n        ELSE sc.total_samples / oc.total_orders\n    END AS racio\nFROM \n    sample_counts sc, order_counts oc\nEND*/\n/*Racio Totais Enc-Amostras*/\nBegin\nWITH sample_counts AS (\n    Select SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tJOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n),\norder_counts AS (\n    Select COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and \n\t\tcod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n)\n-- Unindo as duas contagens\nSELECT \n    CASE \n        WHEN oc.total_orders = 0 THEN NULL\n        ELSE sc.total_samples / oc.total_orders\n    END AS racio\nFROM \n    sample_counts sc, order_counts oc\nEND\n\n/*Racio Por Cliente Enc-Amostras\nBegin\nWITH sample_counts AS (\n    Select p.PartnerID, p.PartnerName, SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tjoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and cod.Versao not like '3%' and cod.Versao not like '4%'\n\tgroup by p.PartnerID, p.PartnerName\n),\norder_counts AS (\n    Select p.PartnerID, p.PartnerName,COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n        and cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tgroup by p.PartnerID, p.PartnerName\n)\n-- Unindo as duas contagens\nSELECT\n\tsc.PartnerID,\n\tsc.PartnerName,\n    sc.total_samples amostras,\n    oc.total_orders encomendas,\n    CASE \n        WHEN oc.total_orders = 0 THEN NULL\n        ELSE sc.total_samples / oc.total_orders\n    END AS racio\nFROM \n    sample_counts sc\nLEFT JOIN \n    order_counts oc ON sc.PartnerID = oc.PartnerID\n    Order by total_samples DESC\nEND*/\n/*Racio Por Cliente Enc-Amostras*/\nBEGIN\nWITH sample_counts AS (\n    Select p.PartnerID, p.PartnerName, SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tJOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\t\n\tgroup by p.PartnerID, p.PartnerName\n),\norder_counts AS (\n    Select p.PartnerID, p.PartnerName,COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n        and cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tgroup by p.PartnerID, p.PartnerName\n)\nSELECT\n\tsc.PartnerID,\n\tsc.PartnerName,\n    iif(sc.total_samples is null, 0,sc.total_samples)  amostras,\n    iif(oc.total_orders is null, 0,oc.total_orders) encomendas,\n    CASE \n        WHEN oc.total_orders = 0 THEN 0\n        ELSE iif((sc.total_samples / oc.total_orders) is null, 0, (sc.total_samples / oc.total_orders))\n    END AS racio\nFROM \n    sample_counts sc\nLEFT JOIN \n    order_counts oc ON sc.PartnerID = oc.PartnerID\n    Order by total_samples DESC\nEND\n\n/*Valores de Amostras Realizadas Na Semana Por Cliente*/\nSelect a.NR_CLIENTE, a.CLIENTE, SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO], \nDATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) Inicio, DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) Fim\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID\n\t\tWhere ons3.DtEndReal>=DATEADD(day,0,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) and ons3.DtEndReal<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))) a\n\t\tGroup by a.NR_CLIENTE, a.CLIENTE\n\n/*Valores de Amostras Realizadas Na Semana TOTAIS*/\nSelect SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO], \nDATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) Inicio, DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) Fim\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID\n\t\tWhere ons3.DtEndReal>=DATEADD(day,0,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) and ons3.DtEndReal<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))) a\n\n/*Valores de Amostras Realizadas Anuais Por Cliente*/\nSelect a.NR_CLIENTE, a.CLIENTE, SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a\n\t\tGroup by a.NR_CLIENTE, a.CLIENTE\n        Order by Total DESC\n\n/*Valores de Amostras Realizadas Anuais TOTAIS*/\nSelect SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a\n\n\n\n/*Valores de Amostras Realizadas Anuais Por Cliente Ano Anterior*/\nSelect a.NR_CLIENTE, a.CLIENTE, SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a\n\t\tGroup by a.NR_CLIENTE, a.CLIENTE\n\n/*Valores de Amostras Realizadas Anuais TOTAIS Ano Anterior*/\nSelect SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "97d4e9618b81af9e"
            ]
        ]
    },
    {
        "id": "97d4e9618b81af9e",
        "type": "function",
        "z": "4825264caacc700a",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "1f4f953f3c258331"
            ]
        ]
    },
    {
        "id": "ae63ffb79bae5e71",
        "type": "function",
        "z": "4825264caacc700a",
        "name": "Create Template",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n})\nvar valuesGlobal = msg.payload[0]\nvar valuesGlobalTotal=msg.payload[2]\nvar valuesWeek = msg.payload[1]\nvar valuesWeekTotal = msg.payload[3]\nvar valuesGlobalYearAnt=msg.payload[4]\nvar valuesGlobalYearAntTotal = msg.payload[5]\n\nvar countEncomendasGlobal = msg.payload[6]\nvar countEncomendasQuantidadeGlobal = msg.payload[7]\n\nvar countEncomendasGlobalTotal = msg.payload[8]\nvar countEncomendasQuantidadeGlobalTotal = msg.payload[9]\n\nvar html_aux = \"\"\nvar html_aux_week=\"\"\n\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\n\nvar firstday = new Date(date.setDate(first));\nvar lastday = new Date(firstday).addDays(6);\nvar firstDayFormat=firstday.getDate()+\"/\"+(firstday.getMonth()+1)+\"/\"+firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1)+\"/\"+ lastday.getFullYear()\n\nhtml_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalTotal.length > 0 ? valuesGlobalTotal[0].Total:0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalYearAntTotal.length > 0 ? valuesGlobalYearAntTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_week = html_aux_week + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week = html_aux_week + \"<td><h4>\" + euroGermanNumber.format(valuesWeekTotal.length > 0 ? valuesWeekTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week = html_aux_week + \"</tr>\"\n\nvaluesGlobal.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n    var value=0;\n    valuesGlobalYearAnt.map(j=>{\n        if(j.PartnerID===i.PartnerID){\n            value = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n})\n\nvaluesWeek.map(i => {\n    html_aux_week = html_aux_week + \"<tr>\"\n    html_aux_week = html_aux_week + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux_week = html_aux_week + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n})\n\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE AMOSTRAS SEMANAL DE \"+firstDayFormat+\" A \"+lastDayFormat+\"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week\nhtml=html+\"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" +(new Date().getFullYear())+ \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html+\"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total \" + (new Date().getFullYear())+\"</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear())-1) + \"</th>\" +\n    \"</tr>\"\nhtml=html+html_aux;\nhtml = html + \"</table><br></br> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE AMOSTRAS SEMANAL DE '+firstDayFormat+' A '+lastDayFormat+'.';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8bc7156fb07f1e93",
        "type": "inject",
        "z": "4825264caacc700a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "9f27adedc5f528ba"
            ]
        ]
    },
    {
        "id": "e101cdd59d92eb6e",
        "type": "e-mail",
        "z": "4825264caacc700a",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1000,
        "y": 120,
        "wires": []
    },
    {
        "id": "3378a93fb48a814c",
        "type": "e-mail",
        "z": "4825264caacc700a",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1000,
        "y": 240,
        "wires": []
    },
    {
        "id": "036da7ecc0e30d66",
        "type": "e-mail",
        "z": "4825264caacc700a",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "daniela.alves@fsm.pt",
        "dname": "",
        "x": 1000,
        "y": 300,
        "wires": []
    },
    {
        "id": "051e3b61bdaec2b4",
        "type": "e-mail",
        "z": "4825264caacc700a",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "1f4f953f3c258331",
        "type": "function",
        "z": "4825264caacc700a",
        "name": "Create Template",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n})\nvar valuesGlobal = msg.payload[0]\nvar valuesGlobalTotal = msg.payload[2]\nvar valuesWeek = msg.payload[1]\nvar valuesWeekTotal = msg.payload[3]\nvar valuesGlobalYearAnt = msg.payload[4]\nvar valuesGlobalYearAntTotal = msg.payload[5]\n\nvar countEncomendasGlobal = msg.payload[6]\nvar countEncomendasQuantidadeGlobal = msg.payload[7]\n\nvar countEncomendasGlobalTotal = msg.payload[8]\nvar countEncomendasQuantidadeGlobalTotal = msg.payload[9]\n\nvar countRacioTotal = msg.payload[10]\nvar countRacioCliente = msg.payload[11]\n\nvar valuesWeekDoneCliente = msg.payload[12]\nvar valuesWeekDoneTotal = msg.payload[13]\n\nvar valuesAnualDoneCliente = msg.payload[14]\nvar valuesAnualDoneTotal = msg.payload[15]\n\nvar valuesAnualAnteriorDoneCliente = msg.payload[16]\nvar valuesAnualAnteriorDoneTotal = msg.payload[17]\n\nvar html_aux = \"\"\nvar html_aux_week = \"\"\n\nvar html_aux_done = \"\"\nvar html_aux_week_done = \"\"\n\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth()) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\n\nvar firstday = new Date(date.setDate(first))\nvar lastday = new Date(firstday).addDays(6);\nvar firstDayFormat = firstday.getDate() + \"/\" + (firstday.getMonth() + 1) + \"/\" + firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1) + \"/\" + lastday.getFullYear()\n\n/*html_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalTotal.length > 0 ? valuesGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalYearAntTotal.length > 0 ? valuesGlobalYearAntTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasGlobalTotal.length > 0 ? countEncomendasGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasQuantidadeGlobalTotal.length > 0 ? countEncomendasQuantidadeGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countRacioTotal.length > 0 ? countRacioTotal[0].racio : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"*/\n\nhtml_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesAnualAnteriorDoneTotal.length > 0 ? valuesAnualAnteriorDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGerman.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasGlobalTotal.length > 0 ? countEncomendasGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasQuantidadeGlobalTotal.length > 0 ? countEncomendasQuantidadeGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countRacioTotal.length > 0 ? countRacioTotal[0].racio : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_week = html_aux_week + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week = html_aux_week + \"<td><h4>\" + euroGermanNumber.format(valuesWeekTotal.length > 0 ? valuesWeekTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week = html_aux_week + \"</tr>\"\n\n/*\nvaluesGlobal.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n    var value = 0;\n    valuesGlobalYearAnt.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            value = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n\n    var valueRacio = 0;\n    countRacioCliente.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueRacio = j.racio\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueRacio) + \"</td>\"\n})\n*/\nvaluesAnualDoneCliente.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.CLIENTE + \"</td>\"\n    var value = 0;\n    valuesAnualAnteriorDoneCliente.map(j => {\n        if (j.NR_CLIENTE === i.NR_CLIENTE) {\n            value = j.QTD\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n\n    var valueRacio = 0;\n    countRacioCliente.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueRacio = j.racio\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueRacio) + \"</td>\"\n})\nvaluesWeek.map(i => {\n    html_aux_week = html_aux_week + \"<tr>\"\n    html_aux_week = html_aux_week + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux_week = html_aux_week + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n})\n\nhtml_aux_done = html_aux_done + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_done = html_aux_done + \"<td><h4>\" + euroGermanNumber.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux_done = html_aux_done + \"<td><h4>\" + euroGerman.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_done = html_aux_done + \"</tr>\"\n\nvaluesAnualDoneCliente.map(i => {\n    html_aux_done = html_aux_done + \"<tr>\"\n    html_aux_done = html_aux_done + \"<td>\" + i.CLIENTE + \"</td>\"\n    html_aux_done = html_aux_done + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux_done = html_aux_done + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n})\n\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>\" + euroGermanNumber.format(valuesWeekDoneTotal.length > 0 ? valuesWeekDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>\" + euroGerman.format(valuesWeekDoneTotal.length > 0 ? valuesWeekDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"</tr>\"\n\nvaluesWeekDoneCliente.map(i => {\n    html_aux_week_done = html_aux_week_done + \"<tr>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + i.CLIENTE + \"</td>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n})\n\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE AMOSTRAS SEMANAL DE \" + firstDayFormat + \" A \" + lastDayFormat + \" REALIZADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week_done\nhtml = html + \"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" + (new Date().getFullYear()) + \" REALIZADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_done\nhtml = html + \"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" + (new Date().getFullYear()) + \" REALIZADAS COM RÁCIO.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear()) - 1) + \"</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear())) + \"</th>\" +\n    \"<th>Valor Total € \" + ((new Date().getFullYear())) + \"</th>\" +\n    \"<th>Nr de Encomendas Total \" + (new Date().getFullYear()) + \"</th>\" +\n    \"<th>Quantidades de Peças em Encomendas  \" + (new Date().getFullYear()) + \"</th>\" +\n    \"<th>Rácio Amostras/Encomendas  \" + (new Date().getFullYear()) + \"</th>\" +\n    \"</tr>\"\nhtml = html + html_aux;\nhtml = html + \"</table><br></br> \"\nhtml = html + \"<h4> MAPA DE AMOSTRAS SEMANAL DE \" + firstDayFormat + \" A \" + lastDayFormat + \" CRIADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week\nhtml = html + \"</table><br></br></body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE AMOSTRAS SEMANAL DE ' + firstDayFormat + ' A ' + lastDayFormat + '.';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "1b773bee6c22c01b",
                "e101cdd59d92eb6e",
                "3378a93fb48a814c",
                "036da7ecc0e30d66",
                "4e69bee59df71561"
            ]
        ]
    },
    {
        "id": "1b773bee6c22c01b",
        "type": "e-mail",
        "z": "4825264caacc700a",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1000,
        "y": 180,
        "wires": []
    },
    {
        "id": "1c4e80d8708352f0",
        "type": "MSSQL",
        "z": "4825264caacc700a",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Amostras Teste",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "/*Valores de Amostras Globais*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\ngroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Valores de Amostras Por Semana*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand cod.CreationDateTime>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and cod.CreationDateTime<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\ngroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Valores de Amostras Globais Totais*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\nOrder by Total DESC\n\n/*Valores de Amostras Por Semana Totais*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\nand cod.CreationDateTime>=DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) and cod.CreationDateTime<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\nOrder by Total DESC\n\n/*Valores de Amostras Globais Ano Anterior*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\ngroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Valores de Amostras Globais Ano Anterior Total*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\njoin ItemMasterDetailsVersion imdv on imdv.ItemId=cod.ItemID and imdv.Version=cod.Versao\nWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\nand imdv.VersionName not like '%intertek%' and cod.Versao not like '3%' and cod.Versao not like '4%'\nOrder by Total DESC\n\n/*Count de Encomendas Global*/\nSelect p.PartnerID, p.PartnerName,COUNT(*) Total\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n        and cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tgroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Count de Encomendas Por Quantidade Global*/\nSelect p.PartnerID, p.PartnerName, SUM(QtyOrd) Total\n\tfrom ClientOrderDetails cod\n\tjoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tWhere cod.DocType='OP' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and\n    cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0\n\tgroup by p.PartnerID, p.PartnerName\nOrder by Total DESC\n\n/*Count de Encomendas Global Totais*/\nSelect COUNT(*) Total\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and \n\t\tcod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\nOrder by Total DESC\n\n/*Count de Encomendas Por Quantidade Global Totais*/\nSelect SUM(QtyOrd) Total\nfrom ClientOrderDetails cod\njoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\njoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\nWhere cod.DocType='OP' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and\ncod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0\nOrder by Total DESC\n\n/*Racio Totais Enc-Amostras\nBegin\n\nWITH sample_counts AS (\n    Select SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tjoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\n\tWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and cod.Versao not like '3%' and cod.Versao not like '4%'\n),\norder_counts AS (\n    Select COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and \n\t\tcod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n)\n-- Unindo as duas contagens\nSELECT \n    CASE \n        WHEN oc.total_orders = 0 THEN NULL\n        ELSE sc.total_samples / oc.total_orders\n    END AS racio\nFROM \n    sample_counts sc, order_counts oc\nEND*/\n/*Racio Totais Enc-Amostras*/\nBegin\nWITH sample_counts AS (\n    Select SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tJOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n),\norder_counts AS (\n    Select COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and \n\t\tcod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n)\n-- Unindo as duas contagens\nSELECT \n    CASE \n        WHEN oc.total_orders = 0 THEN NULL\n        ELSE sc.total_samples / oc.total_orders\n    END AS racio\nFROM \n    sample_counts sc, order_counts oc\nEND\n\n/*Racio Por Cliente Enc-Amostras\nBegin\nWITH sample_counts AS (\n    Select p.PartnerID, p.PartnerName, SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tjoin ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tWhere cod.DocType='PA' and YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA' and cod.Versao not like '3%' and cod.Versao not like '4%'\n\tgroup by p.PartnerID, p.PartnerName\n),\norder_counts AS (\n    Select p.PartnerID, p.PartnerName,COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n        and cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tgroup by p.PartnerID, p.PartnerName\n)\n-- Unindo as duas contagens\nSELECT\n\tsc.PartnerID,\n\tsc.PartnerName,\n    sc.total_samples amostras,\n    oc.total_orders encomendas,\n    CASE \n        WHEN oc.total_orders = 0 THEN NULL\n        ELSE sc.total_samples / oc.total_orders\n    END AS racio\nFROM \n    sample_counts sc\nLEFT JOIN \n    order_counts oc ON sc.PartnerID = oc.PartnerID\n    Order by total_samples DESC\nEND*/\n/*Racio Por Cliente Enc-Amostras*/\nBEGIN\nWITH sample_counts AS (\n    Select p.PartnerID, p.PartnerName, SUM(QtyOrd) total_samples\n\tfrom ClientOrderDetails cod\n\tJOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\t\n\tgroup by p.PartnerID, p.PartnerName\n),\norder_counts AS (\n    Select p.PartnerID, p.PartnerName,COUNT(*) total_orders\nfrom (Select Distinct ItemID, ClientID\n\t\tfrom ClientOrderDetails cod\n\t\tjoin ClientOrders co on co.DocType=cod.DocType and co.OrderID=cod.OrderID\n\t\tWhere cod.docType='OP' and  YEAR(cod.CreationDateTime)=YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n        and cod.OrderID like '99%' and cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF' and cod.QtyOrd>0) co\n\tjoin BusinessPartners p on p.PartnerID=co.ClientID and p.PartnerType='C'\n\tgroup by p.PartnerID, p.PartnerName\n)\nSELECT\n\tsc.PartnerID,\n\tsc.PartnerName,\n    iif(sc.total_samples is null, 0,sc.total_samples)  amostras,\n    iif(oc.total_orders is null, 0,oc.total_orders) encomendas,\n    CASE \n        WHEN oc.total_orders = 0 THEN 0\n        ELSE iif((sc.total_samples / oc.total_orders) is null, 0, (sc.total_samples / oc.total_orders))\n    END AS racio\nFROM \n    sample_counts sc\nLEFT JOIN \n    order_counts oc ON sc.PartnerID = oc.PartnerID\n    Order by total_samples DESC\nEND\n\n/*Valores de Amostras Realizadas Na Semana Por Cliente*/\nSelect a.NR_CLIENTE, a.CLIENTE, SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO], \nDATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) Inicio, DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) Fim\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID\n\t\tWhere ons3.DtEndReal>=DATEADD(day,0,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) and ons3.DtEndReal<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))) a\n\t\tGroup by a.NR_CLIENTE, a.CLIENTE\n\n/*Valores de Amostras Realizadas Na Semana TOTAIS*/\nSelect SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO], \nDATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()) Inicio, DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) Fim\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID\n\t\tWhere ons3.DtEndReal>=DATEADD(day,0,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE())) and ons3.DtEndReal<=DATEADD(day,7,DATEADD(DAY, 1-DATEPART(WEEKDAY, GETDATE()), GETDATE()))) a\n\n/*Valores de Amostras Realizadas Anuais Por Cliente*/\nSelect a.NR_CLIENTE, a.CLIENTE, SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a\n\t\tGroup by a.NR_CLIENTE, a.CLIENTE\n        Order by Total DESC\n\n/*Valores de Amostras Realizadas Anuais TOTAIS*/\nSelect SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE()) and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a\n\n\n\n/*Valores de Amostras Realizadas Anuais Por Cliente Ano Anterior*/\nSelect a.NR_CLIENTE, a.CLIENTE, SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a\n\t\tGroup by a.NR_CLIENTE, a.CLIENTE\n\n/*Valores de Amostras Realizadas Anuais TOTAIS Ano Anterior*/\nSelect SUM(a.[QTD PEDIDA ONS3]) QTD, SUM(a.[TOTAL €]) Total\nfrom (Select DISTINCT ons3.DocType PA, ons3.OrderID [PA NR], ons3.ItemID [ARTIGO],ons3.PartnerID NR_CLIENTE, p.PartnerName CLIENTE, ons3.UnitPrice [PREÇO], ons3.IDIntegration [DOC. SAP],\nons3.QtyOrd [QTD PEDIDA ONS3], TotValue [TOTAL €], DtEndReal [DATA DE FINALIZAÇÃO]\nfrom (Select cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date) DtEndReal,\nSUM(TotValue) TotValue, SUM(QtyOrd) QtyOrd\nFROM ClientOrderDetails cod\n    JOIN ClientOrderFases cof \n        ON cof.DocType = cod.DocType \n        AND cod.OrderId = cof.OrderId \n        AND cod.OrderRow = cof.OrderRow \n        AND ISNULL(cof.activated,1) = 1\n    JOIN ClientOrders co \n        ON co.DocType = cod.DocType \n        AND co.OrderID = cod.OrderID\n    JOIN DocumentConfig dc \n        ON dc.DocType = co.DocType\n    JOIN UserBusinessPartners ubp \n        ON ubp.userid = 'ons3' \n        AND (\n            (ubp.AllPartners = 1 AND ubp.partnerType = dc.partnerType) \n            OR (ubp.PartnerID = co.clientID AND ubp.PartnerType = dc.partnerType)\n        )\n    WHERE \n        cod.ProductionStatus IN (\n            SELECT ds.DocStatusID \n            FROM DocumentStatus ds \n            WHERE ds.BlockDoc = 0 AND ds.IsAnulated = 0\n        )\n        AND (cod.DocType = 'PA' OR 'PA' = 'TODOS')\n        AND cof.DocumentFase = 'PTC'\n        AND cof.DtEndReal IS NOT NULL\n        AND YEAR(cof.DtEndReal) = YEAR(GETDATE())-1 and cod.ProductionStatus!='ANULADA'\n\t\tGroup by cod.DocType, cod.OrderID, cod.ItemID, cod.UnitPrice, cod.IDIntegration,PartnerID, CAST(DtEndReal as date)) ons3\n\t\tleft join (Select PartnerID, PartnerName from OnS3_FSM.dbo.BusinessPartners bp Where bp.PartnerType='C') p\n\t\ton p.PartnerID=ons3.PartnerID) a",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "c5de07982f3f28d5"
            ]
        ]
    },
    {
        "id": "ca080d542febe975",
        "type": "inject",
        "z": "4825264caacc700a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "1c4e80d8708352f0"
            ]
        ]
    },
    {
        "id": "c5de07982f3f28d5",
        "type": "function",
        "z": "4825264caacc700a",
        "name": "teste",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "2a41fedbcb8bae47"
            ]
        ]
    },
    {
        "id": "2a41fedbcb8bae47",
        "type": "function",
        "z": "4825264caacc700a",
        "name": "Create Template Test",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n})\nvar valuesGlobal = msg.payload[0]\nvar valuesGlobalTotal = msg.payload[2]\nvar valuesWeek = msg.payload[1]\nvar valuesWeekTotal = msg.payload[3]\nvar valuesGlobalYearAnt = msg.payload[4]\nvar valuesGlobalYearAntTotal = msg.payload[5]\n\nvar countEncomendasGlobal = msg.payload[6]\nvar countEncomendasQuantidadeGlobal = msg.payload[7]\n\nvar countEncomendasGlobalTotal = msg.payload[8]\nvar countEncomendasQuantidadeGlobalTotal = msg.payload[9]\n\nvar countRacioTotal = msg.payload[10]\nvar countRacioCliente = msg.payload[11]\n\nvar valuesWeekDoneCliente = msg.payload[12]\nvar valuesWeekDoneTotal = msg.payload[13]\n\nvar valuesAnualDoneCliente = msg.payload[14]\nvar valuesAnualDoneTotal = msg.payload[15]\n\nvar valuesAnualAnteriorDoneCliente = msg.payload[16]\nvar valuesAnualAnteriorDoneTotal = msg.payload[17]\n\nvar html_aux = \"\"\nvar html_aux_week = \"\"\n\nvar html_aux_done = \"\"\nvar html_aux_week_done = \"\"\n\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth()) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\n\nvar firstday = new Date(date.setDate(first))\nvar lastday = new Date(firstday).addDays(6);\nvar firstDayFormat = firstday.getDate() + \"/\" + (firstday.getMonth() + 1) + \"/\" + firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1) + \"/\" + lastday.getFullYear()\n\n/*html_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalTotal.length > 0 ? valuesGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalYearAntTotal.length > 0 ? valuesGlobalYearAntTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasGlobalTotal.length > 0 ? countEncomendasGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasQuantidadeGlobalTotal.length > 0 ? countEncomendasQuantidadeGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countRacioTotal.length > 0 ? countRacioTotal[0].racio : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"*/\n\nhtml_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesAnualAnteriorDoneTotal.length > 0 ? valuesAnualAnteriorDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGerman.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasGlobalTotal.length > 0 ? countEncomendasGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasQuantidadeGlobalTotal.length > 0 ? countEncomendasQuantidadeGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countRacioTotal.length > 0 ? countRacioTotal[0].racio : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_week = html_aux_week + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week = html_aux_week + \"<td><h4>\" + euroGermanNumber.format(valuesWeekTotal.length > 0 ? valuesWeekTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week = html_aux_week + \"</tr>\"\n\n/*\nvaluesGlobal.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n    var value = 0;\n    valuesGlobalYearAnt.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            value = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n\n    var valueRacio = 0;\n    countRacioCliente.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueRacio = j.racio\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueRacio) + \"</td>\"\n})\n*/\nvaluesAnualDoneCliente.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.CLIENTE + \"</td>\"\n    var value = 0;\n    valuesAnualAnteriorDoneCliente.map(j => {\n        if (j.NR_CLIENTE === i.NR_CLIENTE) {\n            value = j.QTD\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n\n    var valueRacio = 0;\n    countRacioCliente.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueRacio = j.racio\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueRacio) + \"</td>\"\n})\nvaluesWeek.map(i => {\n    html_aux_week = html_aux_week + \"<tr>\"\n    html_aux_week = html_aux_week + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux_week = html_aux_week + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n})\n\nhtml_aux_done = html_aux_done + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_done = html_aux_done + \"<td><h4>\" + euroGermanNumber.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux_done = html_aux_done + \"<td><h4>\" + euroGerman.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_done = html_aux_done + \"</tr>\"\n\nvaluesAnualDoneCliente.map(i => {\n    html_aux_done = html_aux_done + \"<tr>\"\n    html_aux_done = html_aux_done + \"<td>\" + i.CLIENTE + \"</td>\"\n    html_aux_done = html_aux_done + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux_done = html_aux_done + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n})\n\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>\" + euroGermanNumber.format(valuesWeekDoneTotal.length > 0 ? valuesWeekDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>\" + euroGerman.format(valuesWeekDoneTotal.length > 0 ? valuesWeekDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"</tr>\"\n\nvaluesWeekDoneCliente.map(i => {\n    html_aux_week_done = html_aux_week_done + \"<tr>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + i.CLIENTE + \"</td>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n})\n\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE AMOSTRAS SEMANAL DE \" + firstDayFormat + \" A \" + lastDayFormat + \" REALIZADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week_done\nhtml = html + \"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" + (new Date().getFullYear()) + \" REALIZADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_done\nhtml = html + \"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" + (new Date().getFullYear()) + \" REALIZADAS COM RÁCIO.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear()) - 1) + \"</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear())) + \"</th>\" +\n    \"<th>Valor Total € \" + ((new Date().getFullYear())) + \"</th>\" +\n    \"<th>Nr de Encomendas Total \" + (new Date().getFullYear()) + \"</th>\" +\n    \"<th>Quantidades de Peças em Encomendas  \" + (new Date().getFullYear()) + \"</th>\" +\n    \"<th>Rácio Amostras/Encomendas  \" + (new Date().getFullYear()) + \"</th>\" +\n    \"</tr>\"\nhtml = html + html_aux;\nhtml = html + \"</table><br></br> \"\nhtml = html +\"<h4> MAPA DE AMOSTRAS SEMANAL DE \" + firstDayFormat + \" A \" + lastDayFormat + \" CRIADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week\nhtml = html + \"</table><br></br></body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE AMOSTRAS SEMANAL DE ' + firstDayFormat + ' A ' + lastDayFormat + '.';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 320,
        "wires": [
            [
                "e101cdd59d92eb6e"
            ]
        ]
    },
    {
        "id": "4be4d2f5bc659812",
        "type": "function",
        "z": "4825264caacc700a",
        "name": "Create Template Test",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n})\nvar valuesGlobal = msg.payload[0]\nvar valuesGlobalTotal = msg.payload[2]\nvar valuesWeek = msg.payload[1]\nvar valuesWeekTotal = msg.payload[3]\nvar valuesGlobalYearAnt = msg.payload[4]\nvar valuesGlobalYearAntTotal = msg.payload[5]\n\nvar countEncomendasGlobal = msg.payload[6]\nvar countEncomendasQuantidadeGlobal = msg.payload[7]\n\nvar countEncomendasGlobalTotal = msg.payload[8]\nvar countEncomendasQuantidadeGlobalTotal = msg.payload[9]\n\nvar countRacioTotal = msg.payload[10]\nvar countRacioCliente = msg.payload[11]\n\nvar valuesWeekDoneCliente = msg.payload[12]\nvar valuesWeekDoneTotal = msg.payload[13]\n\nvar valuesAnualDoneCliente = msg.payload[14]\nvar valuesAnualDoneTotal = msg.payload[15]\n\nvar valuesAnualAnteriorDoneCliente = msg.payload[16]\nvar valuesAnualAnteriorDoneTotal = msg.payload[17]\n\nvar html_aux = \"\"\nvar html_aux_week = \"\"\n\nvar html_aux_done = \"\"\nvar html_aux_week_done = \"\"\n\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth()) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\n\nvar firstday = new Date(date.setDate(first))\nvar lastday = new Date(firstday).addDays(6);\nvar firstDayFormat = firstday.getDate() + \"/\" + (firstday.getMonth() + 1) + \"/\" + firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1) + \"/\" + lastday.getFullYear()\n\n/*html_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalTotal.length > 0 ? valuesGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalYearAntTotal.length > 0 ? valuesGlobalYearAntTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasGlobalTotal.length > 0 ? countEncomendasGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasQuantidadeGlobalTotal.length > 0 ? countEncomendasQuantidadeGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countRacioTotal.length > 0 ? countRacioTotal[0].racio : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"*/\n\nhtml_aux = html_aux + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesAnualAnteriorDoneTotal.length > 0 ? valuesAnualAnteriorDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGerman.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasGlobalTotal.length > 0 ? countEncomendasGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countEncomendasQuantidadeGlobalTotal.length > 0 ? countEncomendasQuantidadeGlobalTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(countRacioTotal.length > 0 ? countRacioTotal[0].racio : 0) + \"</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_week = html_aux_week + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week = html_aux_week + \"<td><h4>\" + euroGermanNumber.format(valuesWeekTotal.length > 0 ? valuesWeekTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week = html_aux_week + \"</tr>\"\n\n/*\nvaluesGlobal.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n    var value = 0;\n    valuesGlobalYearAnt.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            value = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n\n    var valueRacio = 0;\n    countRacioCliente.map(j => {\n        if (j.PartnerID === i.PartnerID) {\n            valueRacio = j.racio\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueRacio) + \"</td>\"\n})\n*/\nvaluesAnualDoneCliente.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.CLIENTE + \"</td>\"\n    var value = 0;\n    valuesAnualAnteriorDoneCliente.map(j => {\n        if (j.NR_CLIENTE === i.NR_CLIENTE) {\n            value = j.QTD\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(value) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n\n    var valueEncomendas = 0;\n    countEncomendasGlobal.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueEncomendas = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueEncomendas) + \"</td>\"\n\n    var valueQuantidades = 0;\n    countEncomendasQuantidadeGlobal.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueQuantidades = j.Total\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueQuantidades) + \"</td>\"\n\n    var valueRacio = 0;\n    countRacioCliente.map(j => {\n        if (j.PartnerID === i.NR_CLIENTE) {\n            valueRacio = j.racio\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueRacio) + \"</td>\"\n})\nvaluesWeek.map(i => {\n    html_aux_week = html_aux_week + \"<tr>\"\n    html_aux_week = html_aux_week + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux_week = html_aux_week + \"<td>\" + euroGermanNumber.format(i.Total) + \"</td>\"\n})\n\nhtml_aux_done = html_aux_done + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_done = html_aux_done + \"<td><h4>\" + euroGermanNumber.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux_done = html_aux_done + \"<td><h4>\" + euroGerman.format(valuesAnualDoneTotal.length > 0 ? valuesAnualDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_done = html_aux_done + \"</tr>\"\n\nvaluesAnualDoneCliente.map(i => {\n    html_aux_done = html_aux_done + \"<tr>\"\n    html_aux_done = html_aux_done + \"<td>\" + i.CLIENTE + \"</td>\"\n    html_aux_done = html_aux_done + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux_done = html_aux_done + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n})\n\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>VALOR TOTAL</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>\" + euroGermanNumber.format(valuesWeekDoneTotal.length > 0 ? valuesWeekDoneTotal[0].QTD : 0) + \"</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"<td><h4>\" + euroGerman.format(valuesWeekDoneTotal.length > 0 ? valuesWeekDoneTotal[0].Total : 0) + \"</h4></td>\"\nhtml_aux_week_done = html_aux_week_done + \"</tr>\"\n\nvaluesWeekDoneCliente.map(i => {\n    html_aux_week_done = html_aux_week_done + \"<tr>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + i.CLIENTE + \"</td>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + euroGermanNumber.format(i.QTD) + \"</td>\"\n    html_aux_week_done = html_aux_week_done + \"<td>\" + euroGerman.format(i.Total) + \"</td>\"\n})\n\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE AMOSTRAS SEMANAL DE \" + firstDayFormat + \" A \" + lastDayFormat + \" REALIZADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week_done\nhtml = html + \"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" + (new Date().getFullYear()) + \" REALIZADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"<th>Total €</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_done\nhtml = html + \"</table><br></br>\"\nhtml = html +\"<h4> MAPA DE AMOSTRAS SEMANAL DE \" + firstDayFormat + \" A \" + lastDayFormat + \" CRIADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total</th>\" +\n    \"</tr>\"\nhtml = html + html_aux_week\nhtml = html + \"</table><br></br>\"\nhtml = html + \"<h4> MAPA DE AMOSTRAS ANUAL DE \" + (new Date().getFullYear()) + \" CRIADAS.</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\"\nhtml = html + \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear())-1) + \"</th>\" +\n    \"<th>Quantidade Total \" + ((new Date().getFullYear())) + \"</th>\" +\n    \"<th>Valor Total € \" + ((new Date().getFullYear())) + \"</th>\" +\n    \"<th>Nr de Encomendas Total \" + (new Date().getFullYear()) + \"</th>\" +\n    \"<th>Quantidades de Peças em Encomendas  \" + (new Date().getFullYear()) + \"</th>\" +\n    \"<th>Rácio Amostras/Encomendas  \" + (new Date().getFullYear()) + \"</th>\" +\n    \"</tr>\"\nhtml = html + html_aux;\nhtml = html + \"</table><br></br> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE AMOSTRAS SEMANAL DE ' + firstDayFormat + ' A ' + lastDayFormat + '.';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4e69bee59df71561",
        "type": "e-mail",
        "z": "4825264caacc700a",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rita.ribeiro@fsm.pt",
        "dname": "",
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "cd455094cd57f5dc",
        "type": "inject",
        "z": "d8b91f5aab19e75d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "6e1d9350add378a2"
            ]
        ]
    },
    {
        "id": "6e1d9350add378a2",
        "type": "MSSQL",
        "z": "d8b91f5aab19e75d",
        "mssqlCN": "c1ac5661abe38939",
        "name": "",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "\n/*Select Sum(TotEnc) TotEncT, Sum(MonthCor) MonthCorT,Sum(MonthPro) MonthProT\nfrom EncomendasTotaisPorCliOPONS3*/\n\nSelect FORMAT(CAST(Sum(TotEnc) as decimal(18,0)), 'C0', 'de-DE') TotEncT, FORMAT(CAST(Sum(MonthCor) as decimal(18,0)), 'C0', 'de-DE') MonthCorT,FORMAT(CAST(Sum(MonthPro) as decimal(18,0)), 'C0', 'de-DE') MonthProT\nfrom EncomendasTotaisPorCli\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\n\n/*Select PartnerName,Sum(TotEnc) TotEncT, Sum(MonthCor) MonthCorT,Sum(MonthPro) MonthProT\nfrom EncomendasTotaisPorCliOPONS3\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\nGroup by PartnerName, PartnerID\nOrder by TotEncT DESC*/\n\nSelect PartnerName,FORMAT(CAST(Sum(TotEnc) as decimal(18,0)), 'C0', 'de-DE') TotEncT, FORMAT(CAST(Sum(MonthCor) as decimal(18,0)), 'C0', 'de-DE') MonthCorT,FORMAT(CAST(Sum(MonthPro) as decimal(18,0)), 'C0', 'de-DE') MonthProT\nfrom EncomendasTotaisPorCli\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\nGroup by PartnerName, PartnerID\nOrder by TotEncT DESC\n\n\n/*Select PartnerName,Sum(TotEnc) TotEncT, Sum(MonthCor) MonthCorT,Sum(MonthPro) MonthProT\nfrom EncomendasTotaisPorCliGenCatOPONS3\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\nGroup by PartnerName, PartnerID\nOrder by TotEncT DESC*/\n\nSelect PartnerName,FORMAT(CAST(Sum(TotEnc) as decimal(18,0)), 'C0', 'de-DE') TotEncT, FORMAT(CAST(Sum(MonthCor) as decimal(18,0)), 'C0', 'de-DE') MonthCorT,FORMAT(CAST(Sum(MonthPro) as decimal(18,0)), 'C0', 'de-DE') MonthProT\nfrom EncomendasTotaisPorCliGenCat\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\nGroup by PartnerName, PartnerID\nOrder by TotEncT DESC\n\nSelect FORMAT(CAST(Sum(TotEnc) as decimal(18,0)), 'C0', 'de-DE') TotEncT,FORMAT(CAST(Sum(MonthCor) as decimal(18,0)), 'C0', 'de-DE') MonthCorT,FORMAT(CAST(Sum(MonthPro) as decimal(18,0)), 'C0', 'de-DE') MonthProT\nfrom EncomendasTotaisPorCliOPONS3NOTENC\n\nSelect PartnerName,FORMAT(CAST(Sum(TotEnc) as decimal(18,0)), 'C0', 'de-DE') TotEncT, FORMAT(CAST(Sum(MonthCor) as decimal(18,0)), 'C0', 'de-DE') MonthCorT,FORMAT(CAST(Sum(MonthPro) as decimal(18,0)), 'C0', 'de-DE') MonthProT\nfrom EncomendasTotaisPorCliOPONS3NOTENC\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\nGroup by PartnerName, PartnerID\nOrder by TotEncT DESC\n\n\nSelect PartnerName,FORMAT(CAST(Sum(TotEnc) as decimal(18,0)), 'C0', 'de-DE') TotEncT, FORMAT(CAST(Sum(MonthCor) as decimal(18,0)), 'C0', 'de-DE') MonthCorT,FORMAT(CAST(Sum(MonthPro) as decimal(18,0)), 'C0', 'de-DE') MonthProT\nfrom EncomendasTotaisPorCliGenCatOPONS3NOTENC\nWhere TypeData='Value' and PartnerID NOT IN ('3322', '10486')\nGroup by PartnerName, PartnerID\nOrder by TotEncT DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 340,
        "y": 120,
        "wires": [
            [
                "91c689b3fe28036f"
            ]
        ]
    },
    {
        "id": "3e9656a0814abbac",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "d077a08243db98c6",
        "type": "function",
        "z": "d8b91f5aab19e75d",
        "name": "Create Template",
        "func": "let euroGerman = Intl.NumberFormat('et-ET');\nvar values=msg.payload[1]\nvar valuesTotal=msg.payload[0][0]\nvar valuesNOTENC = msg.payload[4]\nvar valuesTotalNOTENC = msg.payload[3][0]\nvar html_aux = \"\"\nvar html_aux_1=\"\"\nhtml_aux = html_aux + \"<tr>\"\nhtml_aux = html_aux + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux = html_aux + \"<td>\" + valuesTotal.TotEncT + \"</td>\"\nhtml_aux = html_aux + \"<td>\" + valuesTotal.MonthCorT + \"</td>\"\nhtml_aux = html_aux + \"<td>\" + valuesTotal.MonthProT + \"</td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_1 = html_aux_1 + \"<tr>\"\nhtml_aux_1 = html_aux_1 + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux_1 = html_aux_1 + \"<td>\" + valuesTotalNOTENC.TotEncT + \"</td>\"\nhtml_aux_1 = html_aux_1 + \"<td>\" + valuesTotalNOTENC.MonthCorT + \"</td>\"\nhtml_aux_1 = html_aux_1 + \"<td>\" + valuesTotalNOTENC.MonthProT + \"</td>\"\nhtml_aux_1 = html_aux_1 + \"</tr>\"\n\nvalues.map(i=>{\n    html_aux=html_aux+\"<tr>\"\n    html_aux=html_aux+\"<td>\"+i.PartnerName+\"</td>\"\n    html_aux=html_aux+\"<td>\"+i.TotEncT+\"</td>\"\n    html_aux=html_aux+\"<td>\"+i.MonthCorT+\"</td>\"\n    html_aux=html_aux+\"<td>\"+i.MonthProT+\"</td>\"\n    html_aux=html_aux+\"</tr>\"\n})\n\nvaluesNOTENC.map(i => {\n  html_aux_1 = html_aux_1 + \"<tr>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.PartnerName + \"</td>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.TotEncT + \"</td>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.MonthCorT + \"</td>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.MonthProT + \"</td>\"\n  html_aux_1 = html_aux_1 + \"</tr>\"\n})\nvar html =\"<!DOCTYPE html>\"+\n\"<html>\"+\n\"<head>\"+\n\"<style>\"+\n\"table {\"+\n  \"font-family: arial, sans-serif;\"+\n  \"border-collapse: collapse;\"+\n  \"width: 100%;\"+\n\"}\"+\n\n\"td{\"+\n  \"border: 1px solid #dddddd;\"+\n  \"text-align: right;\"+\n  \"padding: 8px;\"+\n\"}\"+\n\"th{\"+\n \"border: 1px solid #dddddd;\"+\n  \"text-align: left;\"+\n  \"padding: 8px;\"+\n\"}\"+\n\"tr:nth-child(even) {\"+\n  \"background-color: #dddddd;\"+\n\"}\"+\n\"</style>\"+\n\"</head>\"+\n\"<body>\"+\n\"<h4> Boa Noite.</h4>\"+\n\"<div></div>\"+\n\"<h4> Segue abaixo as Encomendas em Carteira por Cliente</h4><br>\"+\n\"<br><h4>ENCOMENDAS CONFIRMADAS</h4>\"+\n\"<div></div>\"+\n\"<div></div>\"+\n\"<table>\"+\n\"<tr>\"+\n    \"<th>Cliente</th>\"+\n    \"<th>Total em Carteira</th>\"+\n    \"<th>Total Mês Corrente</th>\"+\n    \"<th>Total Próximo Mês</th>\"+\n\"</tr>\"\nhtml=html+html_aux\nhtml = html +\"</table><br> <h4>ENCOMENDAS SEM CONFIRMAÇÃO</h4>\"\nhtml = html + \"<table>\" +\n  \"<tr>\" +\n  \"<th>Cliente</th>\" +\n  \"<th>Total em Carteira</th>\" +\n  \"<th>Total Mês Corrente</th>\" +\n  \"<th>Total Próximo Mês</th>\" +\n  \"</tr>\"\nhtml=html+html_aux_1\nhtml=html+\"</table></body> </html>\"\n\nmsg.payload=html\nmsg.plaintext='text:html'\nmsg.topic='Encomendas em Carteira FSM'\nmsg.from='ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 120,
        "wires": [
            [
                "3e9656a0814abbac",
                "9911df62b17ff5c3",
                "b0bf67d64e3c89b8",
                "2c88ec9a3a6eede2",
                "6327a5cf3b3b6970",
                "c264d34080bb3b11",
                "79991a3a56935ef4",
                "ae31ac4e66916739",
                "5f53f47084cf117a",
                "276622c55935f1ec"
            ]
        ]
    },
    {
        "id": "b0bf67d64e3c89b8",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "patricia.diz@fsm.pt",
        "dname": "",
        "x": 1050,
        "y": 80,
        "wires": []
    },
    {
        "id": "2c88ec9a3a6eede2",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1060,
        "y": 160,
        "wires": []
    },
    {
        "id": "6327a5cf3b3b6970",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fsm.daf@fsm.pt",
        "dname": "",
        "x": 1040,
        "y": 200,
        "wires": []
    },
    {
        "id": "c264d34080bb3b11",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "79991a3a56935ef4",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fernando.machado@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 320,
        "wires": []
    },
    {
        "id": "91c689b3fe28036f",
        "type": "function",
        "z": "d8b91f5aab19e75d",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "d077a08243db98c6"
            ]
        ]
    },
    {
        "id": "e37c0dc5ead15b7a",
        "type": "inject",
        "z": "d8b91f5aab19e75d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 19 * * 1,2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "6e1d9350add378a2"
            ]
        ]
    },
    {
        "id": "ae31ac4e66916739",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "silvia.soares@fsm.pt",
        "dname": "",
        "x": 1060,
        "y": 360,
        "wires": []
    },
    {
        "id": "9911df62b17ff5c3",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1060,
        "y": 280,
        "wires": []
    },
    {
        "id": "5f53f47084cf117a",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "antonio.ferreira@fsm.pt",
        "dname": "",
        "x": 1070,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d8050246805454d",
        "type": "function",
        "z": "d8b91f5aab19e75d",
        "name": "Create Template",
        "func": "let euroGerman = Intl.NumberFormat('et-ET');\nvar values = msg.payload[1]\nvar valuesTotal = msg.payload[0][0]\nvar valuesNOTENC = msg.payload[4]\nvar valuesTotalNOTENC = msg.payload[3][0]\nvar html_aux = \"\"\nvar html_aux_1 = \"\"\nhtml_aux = html_aux + \"<tr>\"\nhtml_aux = html_aux + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux = html_aux + \"<td>\" + valuesTotal.TotEncT + \"</td>\"\nhtml_aux = html_aux + \"<td>\" + valuesTotal.MonthCorT + \"</td>\"\nhtml_aux = html_aux + \"<td>\" + valuesTotal.MonthProT + \"</td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nhtml_aux_1 = html_aux_1 + \"<tr>\"\nhtml_aux_1 = html_aux_1 + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux_1 = html_aux_1 + \"<td>\" + valuesTotalNOTENC.TotEncT + \"</td>\"\nhtml_aux_1 = html_aux_1 + \"<td>\" + valuesTotalNOTENC.MonthCorT + \"</td>\"\nhtml_aux_1 = html_aux_1 + \"<td>\" + valuesTotalNOTENC.MonthProT + \"</td>\"\nhtml_aux_1 = html_aux_1 + \"</tr>\"\n\nvalues.map(i => {\n  html_aux = html_aux + \"<tr>\"\n  html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n  html_aux = html_aux + \"<td>\" + i.TotEncT + \"</td>\"\n  html_aux = html_aux + \"<td>\" + i.MonthCorT + \"</td>\"\n  html_aux = html_aux + \"<td>\" + i.MonthProT + \"</td>\"\n  html_aux = html_aux + \"</tr>\"\n})\n\nvaluesNOTENC.map(i => {\n  html_aux_1 = html_aux_1 + \"<tr>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.PartnerName + \"</td>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.TotEncT + \"</td>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.MonthCorT + \"</td>\"\n  html_aux_1 = html_aux_1 + \"<td>\" + i.MonthProT + \"</td>\"\n  html_aux_1 = html_aux_1 + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n  \"<html>\" +\n  \"<head>\" +\n  \"<style>\" +\n  \"table {\" +\n  \"font-family: arial, sans-serif;\" +\n  \"border-collapse: collapse;\" +\n  \"width: 100%;\" +\n  \"}\" +\n\n  \"td{\" +\n  \"border: 1px solid #dddddd;\" +\n  \"text-align: right;\" +\n  \"padding: 8px;\" +\n  \"}\" +\n  \"th{\" +\n  \"border: 1px solid #dddddd;\" +\n  \"text-align: left;\" +\n  \"padding: 8px;\" +\n  \"}\" +\n  \"tr:nth-child(even) {\" +\n  \"background-color: #dddddd;\" +\n  \"}\" +\n  \"</style>\" +\n  \"</head>\" +\n  \"<body>\" +\n  \"<h4> Boa Noite.</h4>\" +\n  \"<div></div>\" +\n  \"<h4> Segue abaixo as Encomendas em Carteira por Cliente</h4><br>\" +\n  \"<br><h4>ENCOMENDAS CONFIRMADAS</h4>\" +\n  \"<div></div>\" +\n  \"<div></div>\" +\n  \"<table>\" +\n  \"<tr>\" +\n  \"<th>Cliente</th>\" +\n  \"<th>Total em Carteira</th>\" +\n  \"<th>Total Mês Corrente</th>\" +\n  \"<th>Total Próximo Mês</th>\" +\n  \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table><br> <h4>ENCOMENDAS SEM CONFIRMAÇÃO</h4>\"\nhtml = html + \"<table>\" +\n  \"<tr>\" +\n  \"<th>Cliente</th>\" +\n  \"<th>Total em Carteira</th>\" +\n  \"<th>Total Mês Corrente</th>\" +\n  \"<th>Total Próximo Mês</th>\" +\n  \"</tr>\"\nhtml = html + html_aux_1\nhtml = html + \"</table></body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'Encomendas em Carteira FSM'\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 280,
        "wires": [
            [
                "3e9656a0814abbac"
            ]
        ]
    },
    {
        "id": "276622c55935f1ec",
        "type": "e-mail",
        "z": "d8b91f5aab19e75d",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rita.ribeiro@fsm.pt",
        "dname": "",
        "x": 1050,
        "y": 480,
        "wires": []
    },
    {
        "id": "625530bc201cce71",
        "type": "inject",
        "z": "4185b36a93d9e0ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "1ac6925b62f48d07"
            ]
        ]
    },
    {
        "id": "1ac6925b62f48d07",
        "type": "MSSQL",
        "z": "4185b36a93d9e0ac",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Encomendas Atrasadas",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "Select CONCAT(CONCAT(cod.DocType,'.'), cod.OrderID) Doc, cod.ItemID, SUM(cod.QtyOrd) QuantidadePedida, SUM(cod.QtySatisf) QuantidadeProduzida, SUM(cod.QtyPend) QuantidadePendente, \ncod.UnitPrice Preco, IIF(SUM(cod.QtyPend)<1,0,SUM(cod.QtyPend)* AVG(cod.UnitPrice)) Total,\nco.ClientID, p.PartnerName, CAST(cod.CreationDateTime as date) DataCriacao, CAST(co.OrderDatePrev as date) DataEntrega\nfrom ClientOrderDetails cod\nleft join ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\nleft join (Select DISTINCT PartnerID, PartnerName from BusinessPartners b Where PartnerType='C') p on p.PartnerID=co.ClientID\nWhere cod.DocType in ('OP', 'OPC') and cod.ProductionStatus not in ('COMLETA', 'ANULADA', 'COMPLETA', 'CANCELADA')\nand CAST(co.OrderDatePrev as date)<=DATEADD(day, -7, CAST(GETDATE() as date)) and YEAR(cod.CreationDateTime)>=2024\nand cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF'\nGroup by CONCAT(CONCAT(cod.DocType,'.'), cod.OrderID), cod.ItemID, co.ClientID, p.PartnerName, CAST(cod.CreationDateTime as date), CAST(co.OrderDatePrev as date),cod.UnitPrice\nOrder by PartnerName ASC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 370,
        "y": 80,
        "wires": [
            [
                "999464d0e1a252ec"
            ]
        ]
    },
    {
        "id": "999464d0e1a252ec",
        "type": "function",
        "z": "4185b36a93d9e0ac",
        "name": "function",
        "func": "msg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 80,
        "wires": [
            [
                "e55cb2db30d2b8be"
            ]
        ]
    },
    {
        "id": "e55cb2db30d2b8be",
        "type": "function",
        "z": "4185b36a93d9e0ac",
        "name": "Create Template Email",
        "func": "let euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate() - 1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Doc + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.ItemID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantidadePedida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantidadeProduzida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantidadePendente + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Preco + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Total + \"</td>\"\n    html_aux = html_aux + \"<td>\" + new Date(i.DataCriacao).getDate() + \"/\" + (new Date(i.DataCriacao).getMonth() + 1) + \"/\" + new Date(i.DataCriacao).getFullYear() + \"</td>\"\n    html_aux = html_aux + \"<td>\" + new Date(i.DataEntrega).getDate() + \"/\" + (new Date(i.DataEntrega).getMonth() + 1) + \"/\" + new Date(i.DataEntrega).getFullYear() + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> Segue em anexo o mapa das encomendas atrasadas (data de entrega com mais de uma semana) a \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>OP</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>QTD. Ped</th>\" +\n    \"<th>QTD. Prod</th>\" +\n    \"<th>QTD Pend</th>\" +\n    \"<th>Preço</th>\" +\n    \"<th>Total €</th>\" +\n    \"<th>Data Criação</th>\" +\n    \"<th>Data Entrega</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE ENCOMENDAS ATRASADAS FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 80,
        "wires": [
            [
                "a1aa61f712fa1e29",
                "c29664560e9abd4f",
                "eceb85aef29434fb",
                "4d0633eedc966109",
                "173d2214af5dda83",
                "2924f576aa012f87",
                "b4d8a99407efeeb1",
                "d1f26f3dedf1883d",
                "0ada6ab21cf381c4",
                "289a6d3ddd35fbe1",
                "e9365390fe343177"
            ]
        ]
    },
    {
        "id": "a1aa61f712fa1e29",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "9e682425f660581d",
        "type": "inject",
        "z": "4185b36a93d9e0ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * 5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "1ac6925b62f48d07"
            ]
        ]
    },
    {
        "id": "c29664560e9abd4f",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 140,
        "wires": []
    },
    {
        "id": "eceb85aef29434fb",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "rute.teixeira@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 200,
        "wires": []
    },
    {
        "id": "4d0633eedc966109",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "catia.monteiro@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 260,
        "wires": []
    },
    {
        "id": "173d2214af5dda83",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ana.moreira@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 320,
        "wires": []
    },
    {
        "id": "2924f576aa012f87",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ilda.vieira@fsm.pt",
        "dname": "",
        "x": 1070,
        "y": 380,
        "wires": []
    },
    {
        "id": "b4d8a99407efeeb1",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "silvia.soares@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 500,
        "wires": []
    },
    {
        "id": "d1f26f3dedf1883d",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "lourdes.bessa@fsm.pt",
        "dname": "",
        "x": 1080,
        "y": 560,
        "wires": []
    },
    {
        "id": "0ada6ab21cf381c4",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fernanda.ferreira@fsm.pt",
        "dname": "",
        "x": 1090,
        "y": 620,
        "wires": []
    },
    {
        "id": "289a6d3ddd35fbe1",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "patricia.diz@fsm.pt",
        "dname": "",
        "x": 1070,
        "y": 680,
        "wires": []
    },
    {
        "id": "996d3e786898af46",
        "type": "MSSQL",
        "z": "4185b36a93d9e0ac",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Encomendas Atrasadas Teste",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "Select CONCAT(CONCAT(cod.DocType,'.'), cod.OrderID) Doc, cod.ItemID, SUM(cod.QtyOrd) QuantidadePedida, SUM(cod.QtySatisf) QuantidadeProduzida, SUM(cod.QtyPend) QuantidadePendente, \ncod.UnitPrice Preco, IIF(SUM(cod.QtyPend)<1,0,SUM(cod.QtyPend)* AVG(cod.UnitPrice)) Total,\nco.ClientID, p.PartnerName, CAST(cod.CreationDateTime as date) DataCriacao, CAST(co.OrderDatePrev as date) DataEntrega\nfrom ClientOrderDetails cod\nleft join ClientOrders co on cod.DocType=co.DocType and cod.OrderID=co.OrderID\nleft join (Select DISTINCT PartnerID, PartnerName from BusinessPartners b Where PartnerType='C') p on p.PartnerID=co.ClientID\nWhere cod.DocType in ('OP', 'OPC') and cod.ProductionStatus not in ('COMLETA', 'ANULADA', 'COMPLETA', 'CANCELADA')\nand CAST(co.OrderDatePrev as date)<=DATEADD(day, -7, CAST(GETDATE() as date)) and YEAR(cod.CreationDateTime)>=2024\nand cod.IDIntegration!='' and cod.IDIntegration is not null and cod.IDIntegration!='N/DEF'\nGroup by CONCAT(CONCAT(cod.DocType,'.'), cod.OrderID), cod.ItemID, co.ClientID, p.PartnerName, CAST(cod.CreationDateTime as date), CAST(co.OrderDatePrev as date),cod.UnitPrice\nOrder by PartnerName ASC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "fe68c46505ce4838"
            ]
        ]
    },
    {
        "id": "f2d339f6f32c0b93",
        "type": "inject",
        "z": "4185b36a93d9e0ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "996d3e786898af46"
            ]
        ]
    },
    {
        "id": "fe68c46505ce4838",
        "type": "function",
        "z": "4185b36a93d9e0ac",
        "name": "function Teste",
        "func": "msg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "eb11d71c15501443"
            ]
        ]
    },
    {
        "id": "eb11d71c15501443",
        "type": "function",
        "z": "4185b36a93d9e0ac",
        "name": "Create Template Email Teste",
        "func": "let euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate() - 1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.PartnerName + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Doc + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.ItemID + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantidadePedida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantidadeProduzida + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantidadePendente + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Preco + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.Total + \"</td>\"\n    html_aux = html_aux + \"<td>\" + new Date(i.DataCriacao).getDate() + \"/\" + (new Date(i.DataCriacao).getMonth() + 1) + \"/\" + new Date(i.DataCriacao).getFullYear() + \"</td>\"\n    html_aux = html_aux + \"<td>\" + new Date(i.DataEntrega).getDate() + \"/\" + (new Date(i.DataEntrega).getMonth() + 1) + \"/\" + new Date(i.DataEntrega).getFullYear() + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> Segue em anexo o mapa das encomendas atrasadas (data de entrega com mais de uma semana) a \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>OP</th>\" +\n    \"<th>Modelo</th>\" +\n    \"<th>QTD. Ped</th>\" +\n    \"<th>QTD. Prod</th>\" +\n    \"<th>QTD Pend</th>\" +\n    \"<th>Preço</th>\" +\n    \"<th>Total €</th>\" +\n    \"<th>Data Criação</th>\" +\n    \"<th>Data Entrega</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE ENCOMENDAS ATRASADAS FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 200,
        "wires": [
            [
                "a1aa61f712fa1e29",
                "e9365390fe343177"
            ]
        ]
    },
    {
        "id": "e9365390fe343177",
        "type": "e-mail",
        "z": "4185b36a93d9e0ac",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "celia.bessa@fsm.pt",
        "dname": "",
        "x": 1070,
        "y": 440,
        "wires": []
    },
    {
        "id": "f67e3796c48fa518",
        "type": "inject",
        "z": "2d933443e78580c5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "80c4fb0dcd1dc434"
            ]
        ]
    },
    {
        "id": "80c4fb0dcd1dc434",
        "type": "MSSQL",
        "z": "2d933443e78580c5",
        "mssqlCN": "5e1de6a648baf360",
        "name": "Margens",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "Select pname cliente,m.partnerID idpartner, SUM(ValorVenda) ValorVenda,\n                                SUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\n                                From Margens m\n                                Where ano=YEAR(GETDATE())\n                                Group by pname,m.partnerID\n                                HAVING (SUM(ValorVenda)>0 or SUM(CustoMP)>0 or SUM(CustoMOD)>0 or SUM(CustoCA)>0)\n                                Order by ValorVenda DESC\n\nSelect pname cliente,m.partnerID idpartner, SUM(ValorVenda) ValorVenda,\n                                SUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\n                                From Margens m\n                                Where ano=YEAR(GETDATE())-1\n                                Group by pname,m.partnerID\n                                HAVING (SUM(ValorVenda)>0 or SUM(CustoMP)>0 or SUM(CustoMOD)>0 or SUM(CustoCA)>0)\n                                Order by ValorVenda DESC\n\nSelect pname cliente,m.partnerID idpartner, SUM(ValorVenda) ValorVenda,\n                                SUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\n                                From Margens m\n                                Where ano=YEAR(GETDATE())-2\n                                Group by pname,m.partnerID\n                                HAVING (SUM(ValorVenda)>0 or SUM(CustoMP)>0 or SUM(CustoMOD)>0 or SUM(CustoCA)>0)\n                                Order by ValorVenda DESC\n\n\nSelect SUM(ValorVenda) ValorVenda,\nSUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\nFrom Margens m\nWhere ano=YEAR(GETDATE())\n\nSelect SUM(ValorVenda) ValorVenda,\nSUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\nFrom Margens m\nWhere ano=YEAR(GETDATE())-1\n\nSelect SUM(ValorVenda) ValorVenda,\nSUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\nFrom Margens m\nWhere ano=YEAR(GETDATE())-2\n\nSelect pname cliente,m.partnerID idpartner, i.SubCategoryDescr genero, SUM(ValorVenda) ValorVenda,\n                                SUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\n                                From Margens m join ItemMaster i on m.Artigo=i.ItemID\n                                Where ano=YEAR(GETDATE()) and m.partnerID in (6, 1970) and i.SubCategoryDescr in ('HOMEM', 'SENHORA', 'UNISEXO', 'CRIANCA')\n                                Group by pname,m.partnerID, i.SubCategoryDescr\n                                HAVING (SUM(ValorVenda)>0 or SUM(CustoMP)>0 or SUM(CustoMOD)>0 or SUM(CustoCA)>0)\n                                Order by idpartner ASC,ValorVenda DESC\n\nSelect pname cliente,m.partnerID idpartner, i.SubCategoryDescr genero, SUM(ValorVenda) ValorVenda,\n                                SUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\n                                From Margens m join ItemMaster i on m.Artigo=i.ItemID\n                                Where ano=YEAR(GETDATE())-1 and m.partnerID in (6, 1970) and i.SubCategoryDescr in ('HOMEM', 'SENHORA', 'UNISEXO', 'CRIANCA')\n                                Group by pname,m.partnerID, i.SubCategoryDescr\n                                HAVING (SUM(ValorVenda)>0 or SUM(CustoMP)>0 or SUM(CustoMOD)>0 or SUM(CustoCA)>0)\n                                Order by idpartner ASC, ValorVenda DESC\n\nSelect pname cliente,m.partnerID idpartner, i.SubCategoryDescr genero, SUM(ValorVenda) ValorVenda,\n                                SUM(CustoMP) CustoMP, SUM(CustoMOD) CustoMOD, SUM(CustoCA) CustoCA,(case when SUM(ValorVenda) > 0 then cast(((((SUM(ValorVenda) - SUM(CustoMP) - SUM(CustoMod) - SUM(CustoCA)) / SUM(ValorVenda)) * 100)) as money) else 0 end) Margem\n                                From Margens m join ItemMaster i on m.Artigo=i.ItemID\n                                Where ano=YEAR(GETDATE())-2 and m.partnerID in (6, 1970) and i.SubCategoryDescr in ('HOMEM', 'SENHORA', 'UNISEXO', 'CRIANCA')\n                                Group by pname,m.partnerID, i.SubCategoryDescr\n                                HAVING (SUM(ValorVenda)>0 or SUM(CustoMP)>0 or SUM(CustoMOD)>0 or SUM(CustoCA)>0)\n                                Order by idpartner ASC, ValorVenda DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "a866a73c1227c81e"
            ]
        ]
    },
    {
        "id": "a866a73c1227c81e",
        "type": "function",
        "z": "2d933443e78580c5",
        "name": "",
        "func": "msg.payload=msg.payload.recordsets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 100,
        "wires": [
            [
                "a966e66631ec092d"
            ]
        ]
    },
    {
        "id": "a966e66631ec092d",
        "type": "function",
        "z": "2d933443e78580c5",
        "name": "Create Template",
        "func": "let euroGerman = new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n})\nlet euroGermanNumber = new Intl.NumberFormat('de-DE', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n})\nvar values = msg.payload[0]\nvar valuesAnt = msg.payload[1]\nvar valuesAnt2 = msg.payload[2]\nvar valuesGlobal=msg.payload[3]\nvar valuesGlobalAnt = msg.payload[4]\nvar valuesGlobalAnt2 = msg.payload[5]\n\nvar valuesInditex = msg.payload[6]\nvar valuesAntInditex = msg.payload[7]\nvar valuesAnt2Inditex = msg.payload[8]\n\nvar html_aux = \"\"\nvar html_aux_inditex=\"\"\nvar date = new Date()\nvar dateNow = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\nvar first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week\nvar last = first + 6;\nvar firstday = new Date(date.setDate(first));\nvar lastday = new Date(date.setDate(last));\nvar firstDayFormat=firstday.getDate()+\"/\"+(firstday.getMonth()+1)+firstday.getFullYear()\nvar lastDayFormat = lastday.getDate() + \"/\" + (lastday.getMonth() + 1) + lastday.getFullYear()\n\nhtml_aux = html_aux + \"<td><h4>VALOR GLOBAL</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGerman.format(valuesGlobal[0].ValorVenda) + \"</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobal[0].Margem) + \"%</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalAnt[0].Margem) + \"%</h4></td>\"\nhtml_aux = html_aux + \"<td><h4>\" + euroGermanNumber.format(valuesGlobalAnt2[0].Margem) + \"%</h4></td>\"\nhtml_aux = html_aux + \"</tr>\"\n\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.cliente + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGerman.format(i.ValorVenda) + \"</td>\"\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(i.Margem) + \"%</td>\"\n    var valueAnt=0.00;\n    valuesAnt.map(iAnt=>{\n        if(iAnt.idpartner===i.idpartner){\n            valueAnt = euroGermanNumber.format(iAnt.Margem)\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueAnt) + \"%</td>\"\n    var valueAnt2 = 0.00;\n    valuesAnt2.map(iAnt2 => {\n        if (iAnt2.idpartner === i.idpartner) {\n            valueAnt2 = euroGermanNumber.format(iAnt2.Margem)\n        }\n    })\n    html_aux = html_aux + \"<td>\" + euroGermanNumber.format(valueAnt2) + \"%</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\n\nvaluesInditex.map(i => {\n    html_aux_inditex = html_aux_inditex + \"<tr>\"\n    html_aux_inditex = html_aux_inditex + \"<td>\" + i.cliente + \"</td>\"\n    html_aux_inditex = html_aux_inditex + \"<td>\" + i.genero + \"</td>\"\n    html_aux_inditex = html_aux_inditex + \"<td>\" + euroGerman.format(i.ValorVenda) + \"</td>\"\n    html_aux_inditex = html_aux_inditex + \"<td>\" + euroGermanNumber.format(i.Margem) + \"%</td>\"\n    var valueAntInditex = 0.00;\n    valuesAntInditex.map(iAnt => {\n        if (iAnt.idpartner === i.idpartner && iAnt.genero===i.genero) {\n            valueAntInditex = euroGermanNumber.format(iAnt.Margem)\n        }\n    })\n    html_aux_inditex = html_aux_inditex + \"<td>\" + euroGermanNumber.format(valueAntInditex) + \"%</td>\"\n    var valueAnt2Inditex = 0.00;\n    valuesAnt2Inditex.map(iAnt2 => {\n        if (iAnt2.idpartner === i.idpartner && iAnt2.genero === i.genero) {\n            valueAnt2Inditex = euroGermanNumber.format(iAnt2.Margem)\n        }\n    })\n    html_aux_inditex = html_aux_inditex + \"<td>\" + euroGermanNumber.format(valueAnt2Inditex) + \"%</td>\"\n    html_aux_inditex = html_aux_inditex + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> Segue abaixo das Margens por cliente da FSM</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Valor Venda\"+date.getFullYear()+\"</th>\" +\n    \"<th>Margem \"+date.getFullYear()+\"</th>\" +\n    \"<th>Margem \" + (date.getFullYear()-1) + \"</th>\" +\n    \"<th>Margem \" + (date.getFullYear()-2) + \"</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml=html+\"</table><br></br>\"\nhtml = html+\"<table>\" +\n    \"<tr>\" +\n    \"<th>Cliente</th>\" +\n    \"<th>Género</th>\" +\n    \"<th>Valor Venda\" + date.getFullYear() + \"</th>\" +\n    \"<th>Margem \" + date.getFullYear() + \"</th>\" +\n    \"<th>Margem \" + (date.getFullYear() - 1) + \"</th>\" +\n    \"<th>Margem \" + (date.getFullYear() - 2) + \"</th>\" +\n    \"</tr>\"\nhtml=html+html_aux_inditex;\nhtml = html + \"</table><br></br> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MARGENS FSM';\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 100,
        "wires": [
            [
                "5cf10577cb0b6358"
            ]
        ]
    },
    {
        "id": "8e142c3a1de2ac9b",
        "type": "debug",
        "z": "2d933443e78580c5",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "5cf10577cb0b6358",
        "type": "e-mail",
        "z": "2d933443e78580c5",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 960,
        "y": 100,
        "wires": []
    },
    {
        "id": "1eca5f9053c1d74a",
        "type": "e-mail",
        "z": "2d933443e78580c5",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jose.lima@fsm.pt",
        "dname": "",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "8bb7e5069d2ac03a",
        "type": "e-mail",
        "z": "2d933443e78580c5",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "fsm.daf@fsm.pt",
        "dname": "",
        "x": 940,
        "y": 220,
        "wires": []
    },
    {
        "id": "1ab5074a253bb677",
        "type": "e-mail",
        "z": "2d933443e78580c5",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "jmachado@fsm.pt",
        "dname": "",
        "x": 950,
        "y": 280,
        "wires": []
    },
    {
        "id": "72d66883d7893db3",
        "type": "e-mail",
        "z": "2d933443e78580c5",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 960,
        "y": 340,
        "wires": []
    },
    {
        "id": "018e16c7b1789aa0",
        "type": "e-mail",
        "z": "2d933443e78580c5",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "patricia.diz@fsm.pt",
        "dname": "",
        "x": 950,
        "y": 400,
        "wires": []
    },
    {
        "id": "c814a6ac18dbe5a3",
        "type": "inject",
        "z": "2d933443e78580c5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * 5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3cc1d05cfefde65b",
        "type": "inject",
        "z": "49deebbbe8c03ead",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "20754983c164c6d0"
            ]
        ]
    },
    {
        "id": "20754983c164c6d0",
        "type": "MSSQL",
        "z": "49deebbbe8c03ead",
        "mssqlCN": "66fca4e0d43a824e",
        "name": "Stocks Errados",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "Select ItemCode, WarehouseCodeSAP, WarehouseCodeOns3, ColorCode, SizeCode, SUM(QuantitySAP) QuantitySAP, SUM(QuantityOns3) QuantityOns3\nfrom OnS3_FSM.dbo.ItemStocks\nWhere WarehouseCodeSAP in ('010', '001')\nGroup by ItemCode, WarehouseCodeSAP, WarehouseCodeOns3, ColorCode, SizeCode",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "43c5935621a4b046"
            ]
        ]
    },
    {
        "id": "43c5935621a4b046",
        "type": "function",
        "z": "49deebbbe8c03ead",
        "name": "function",
        "func": "msg.payload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 100,
        "wires": [
            [
                "dc3d643ac3ef0d3d"
            ]
        ]
    },
    {
        "id": "dc3d643ac3ef0d3d",
        "type": "function",
        "z": "49deebbbe8c03ead",
        "name": "Create Template Email",
        "func": "let euroGerman = Intl.NumberFormat(\"de-DE\", {\n    minimumFractionDigits: 0,\n});\nvar values = msg.payload\nvar html_aux = \"\"\nvar date = new Date()\nvar dateNow = (date.getDate() - 1) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\nvalues.map(i => {\n    html_aux = html_aux + \"<tr>\"\n    html_aux = html_aux + \"<td>\" + i.ItemCode + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.ColorCode + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.SizeCode + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.WarehouseCodeSAP + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.WarehouseCodeOns3 + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantitySAP + \"</td>\"\n    html_aux = html_aux + \"<td>\" + i.QuantityOns3 + \"</td>\"\n    html_aux = html_aux + \"</tr>\"\n})\nvar html = \"<!DOCTYPE html>\" +\n    \"<html>\" +\n    \"<head>\" +\n    \"<style>\" +\n    \"table {\" +\n    \"font-family: arial, sans-serif;\" +\n    \"border-collapse: collapse;\" +\n    \"width: 100%;\" +\n    \"}\" +\n\n    \"td{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: right;\" +\n    \"font-size: 10px;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"th{\" +\n    \"border: 1px solid #dddddd;\" +\n    \"text-align: left;\" +\n    \"padding: 8px;\" +\n    \"}\" +\n    \"tr:nth-child(even) {\" +\n    \"background-color: #dddddd;\" +\n    \"}\" +\n    \"</style>\" +\n    \"</head>\" +\n    \"<body>\" +\n    \"<h4> Bom Dia.</h4>\" +\n    \"<div></div>\" +\n    \"<h4> MAPA DE STOCKS ERRADOS FSM A \" + dateNow + \"</h4>\" +\n    \"<div></div>\" +\n    \"<div></div>\" +\n    \"<table>\" +\n    \"<tr>\" +\n    \"<th>Artigo</th>\" +\n    \"<th>Cor</th>\" +\n    \"<th>Size</th>\" +\n    \"<th>Armazém SAP</th>\" +\n    \"<th>Armazém OnS3</th>\" +\n    \"<th>QTD. SAP</th>\" +\n    \"<th>QTD. OnS3</th>\" +\n    \"</tr>\"\nhtml = html + html_aux\nhtml = html + \"</table> </body> </html>\"\n\nmsg.payload = html\nmsg.plaintext = 'text:html'\nmsg.topic = 'MAPA DE STOCKS ERRADOS FSM DE ' + dateNow + \".\"\nmsg.from = 'ricardo.ferreira@fsm.pt'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 100,
        "wires": [
            [
                "5e31e6b81def0343",
                "7e9e5917f3d93d5d"
            ]
        ]
    },
    {
        "id": "5e31e6b81def0343",
        "type": "e-mail",
        "z": "49deebbbe8c03ead",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "ricardo.ferreira@fsm.pt",
        "dname": "",
        "x": 1100,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc8d59c9e11d0aab",
        "type": "inject",
        "z": "49deebbbe8c03ead",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 23 * * 1,2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7e9e5917f3d93d5d",
        "type": "e-mail",
        "z": "49deebbbe8c03ead",
        "server": "mail.sooma.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "nuno.franca@fsm.pt",
        "dname": "",
        "x": 1100,
        "y": 160,
        "wires": []
    }
]